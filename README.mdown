# MarkLogic Analytics Dashboard

This AngularJS library is an adaptation of [Jianmin Liu's
analytics-dashboard](https://github.com/jianmin/analytics-dashboard), so that
it can be incorporated into any AngularJS application. It is specifically
designed with applications generated by the [MarkLogic SlushJS
generator](https://github.com/marklogic/slush-marklogic-node) in mind.

This library is a companion to the [analytics-dashboard mlpm
module](https://github.com/patrickmcelwee/mlpm-analytics-dashboard) library for
adding a BI-style dashboard to Angular applications. This library provides the
front end code driving the dashboard, while the mlpm module provides the APIs
(REST extensions and modules).

## Getting Started

    bower install ml-analytics-dashboard-ng --save

And install the [mlpm module](https://github.com/patrickmcelwee/mlpm-analytics-dashboard):

    npm install -g mlpm
    mlpm init
    mlpm install analytics-dashboard --save

For now, you need to overwrite two modules from the `group-by` mlpm library (which
is a dependency of the above `analytics-dashboard` library) to allow
constraining queries to work. To overwrite, run:

    cp {PATH-TO-bower_components}/ml-analytics-dashboard-ng/group-by-json.xqy mlpm_modules/group-by/
    cp {PATH-TO-bower_components}/ml-analytics-dashboard-ng/group-by.xqy mlpm_modules/group-by/
    # If you are using slush-marklogic-node, that will be:
    # cp bower_components/ml-analytics-dashboard-ng/group-by-json.xqy mlpm_modules/group-by/
    # cp bower_components/ml-analytics-dashboard-ng/group-by.xqy mlpm_modules/group-by/
    # If using slush-marklogic-spring-boot:
    # cp src/main/resources/static/bower_components/ml-analytics-dashboard-ng/group-by-json.xqy mlpm_modules/group-by/
    # cp src/main/resources/static/bower_components/ml-analytics-dashboard-ng/group-by.xqy mlpm_modules/group-by/

Now you can deploy the mlpm_modules to MarkLogic:
    
    mlpm deploy -H localhost -P 8040 -u admin -p admin

## Directives Provided

- `mlAnalyticsDashboard`
  -  `mlAnalyticsDashboardHome`
    - `manageMlAnalyticsDashboard`
      - `mlAnalyticsNewReport`
      - `mlAnalyticsDesign`
      - `mlAnalyticsReportEditor` <- TODO, roll this into mlAnalyticsDesign

## Example Implementation

Add the mlAnalyticsDashboard module as a dependency to your app.module. For
example, in a [slush-marklogic-node-generated
app](https://github.com/marklogic/slush-marklogic-node), add this to
`ui/app/app.js` (that will be `src/main/webapp/app/app.js` in
a [slush-marklogic-spring-boot-generated app](slush-marklogic-spring-boot-generated app)):

```javascript
angular.module('app', [
   # ...
  'ml.analyticsDashboard',
  # ...
]);
```

You can embed the ml-analytics-dashboard in your UI using the mlAnalyticsDashboard directive. Simply add this to your HTML markup:

```html
  <ml-analytics-dashboard></ml-analytics-dashboard>
```

At the moment, this directive brings up a configuration screen, and it probably makes sense to have on its own page. If you are using `angular-ui-router`, as in a [slush-marklogic-node-generated](https://github.com/marklogic/slush-marklogic-node) app, you can add a state definition in `ui/app/route/routes.js` (`src/main/webapp/app/route/routes.js` in
a [slush-marklogic-spring-boot-generated app](slush-marklogic-spring-boot-generated app)) with something like this:

```javascript
  .state('root.ml-analytics-dashboard', {
    url: '/ml-analytics-dashboard',
    template: '<ml-analytics-dashboard></ml-analytics-dashboard>'
  })
```

Then, you will probably also want to create a link to this page. For example, in
a [slush-generated](https://github.com/marklogic/slush-marklogic-node) app, you
can add the following line to the `navbar` of `ui/app/root/root.html`.

```html
  <li><a href="/ml-analytics-dashboard">Analytics Dashboard</a></li>
```

# Troubleshooting

## Using path range indexes as a filter

At the moment, you need to declare any namespaces used in a path range index at the app server level. In `deploy/ml-config.xml`, find the `<http-server>` element with '<http-server-name>${app-name}</http-server-name>' and add the following child element:

```xml
<namespaces>
  <namespace>
    <prefix>nfe</prefix>
    <namespace-uri>http://www.portalfiscal.inf.br/nfe</namespace-uri>
  </namespace>
</namespaces>
```

Otherwise, you will get an error like:

    Prefix xxx has no namespace binding
