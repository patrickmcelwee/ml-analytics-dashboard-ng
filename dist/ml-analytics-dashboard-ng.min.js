!function(){"use strict";function routeConfig($stateProvider){$stateProvider.state("root.analytics-dashboard",{url:"/analytics-dashboard",template:"<ml-analytics-dashboard></ml-analytics-dashboard>"}).state("root.analytics-dashboard.new-report",{url:"/new-report",templateUrl:"/templates/new-report.html",controller:"NewReportCtrl"}).state("root.analytics-dashboard.home",{url:"/home",templateUrl:"/templates/home.html",controller:"HomeCtrl"}).state("root.analytics-dashboard.designer",{url:"/designer{uri:path}",templateUrl:"/templates/designer.html",controller:"ReportDesignerCtrl",resolve:{ReportData:function($stateParams,ReportService){var uri=$stateParams.uri;return ReportService.getReport(uri).then(function(response){return response})}}}).state("root.analytics-dashboard.remover",{url:"/remover{uri:path}",templateUrl:"/templates/remover.html",controller:"ReportRemoverCtrl"}).state("root.analytics-dashboard.editor",{url:"/editor{uri:path}",templateUrl:"/templates/editor.html",controller:"ReportEditorCtrl",resolve:{ReportData:function($stateParams,ReportService){var uri=$stateParams.uri;return ReportService.getReport(uri).then(function(response){return response})}}})}angular.module("ml.analyticsDashboard",["highcharts-ng","ml.analyticsDashboard.report","ngTable","ui.dashboard","ui.router"]).config(routeConfig),routeConfig.$inject=["$stateProvider"]}(),function(){"use strict";angular.module("ml-dimension-builder",[])}(),function(){"use strict";angular.module("ml.analyticsDashboard.report",["ml-dimension-builder","ml-sq-builder"])}(),function(){"use strict";angular.module("ml-sq-builder",["RecursionHelper"])}(),function(){"use strict";angular.module("ml.analyticsDashboard.report").factory("SmartGridDataModel",["WidgetDataModel","$http",function(WidgetDataModel,$http){function SmartGridDataModel(){}return SmartGridDataModel.prototype=Object.create(WidgetDataModel.prototype),SmartGridDataModel.prototype.init=function(){WidgetDataModel.prototype.init.call(this),this.load()},SmartGridDataModel.prototype.load=function(){},SmartGridDataModel}])}(),function(){"use strict";angular.module("ml-sq-builder").factory("groupClassHelper",function(){return function(level){var levels=["","list-group-item-info","list-group-item-success","list-group-item-warning","list-group-item-danger"];return levels[level%levels.length]}})}(),function(){"use strict";function toFilters(query,fieldMap){var filters=query.map(parseQueryGroup.bind(query,fieldMap));return filters}function toQuery(filters,fieldMap){var query=filters.map(parseFilterGroup.bind(filters,fieldMap)).filter(function(item){return!!item});return query}function parseQueryGroup(fieldMap,group){var typeMap={"or-query":"group","and-query":"group","value-query":"value","word-query":"word","range-query":"range"},key=Object.keys(group)[0],query=group[key],type=typeMap[key],obj=getFilterTemplate(type);switch(key){case"or-query":case"and-query":obj.rules=group[key].queries.map(parseQueryGroup.bind(group,fieldMap)),obj.subType=key;break;case"value-query":obj.field=getConstraintName(query),obj.subType=key;var fieldData=fieldMap[obj.field];"boolean"===fieldData.type?obj.value=query.text?1:0:obj.value=query.text;break;case"word-query":obj.field=getConstraintName(query),obj.subType=key,obj.value=query.text;break;case"range-query":query["path-index"]?(obj.field=getConstraintName(query),obj.subType="value-query",obj.value=query.value):(obj.field=getConstraintName(query),obj.subType=query["range-operator"],obj.operator=obj.subType,obj.value=query.value);break;default:throw new Error("unexpected query")}return obj}function parseFilterGroup(fieldMap,group){var obj={};if("group"===group.type){obj[group.subType]=group.rules.map(parseFilterGroup.bind(group,fieldMap)).filter(function(item){return!!item});var key=Object.keys(obj)[0],queries={queries:obj[key]},queryObj={};return queryObj[key]=queries,queryObj}var fieldName=group.field,fieldData=fieldMap[fieldName];if(fieldName){switch(fieldData.type){case"string":if("path-expression"===fieldData.classification){var dataType="xs:"+fieldData.type;obj["range-query"]={"path-index":{text:fieldName,namespaces:{}},type:dataType,"range-operator":"EQ",value:group.value}}else{group.subType||(group.subType="value-query");var value={text:group.value};setConstraint(value,fieldName,fieldData),obj[group.subType]=value}break;case"int":case"long":case"decimal":group.subType||(group.subType="EQ");var dataType="xs:"+fieldData.type,value={type:dataType,"range-operator":group.subType,value:group.value};setConstraint(value,fieldName,fieldData),"path-expression"===fieldData.classification&&(value["path-index"]={text:fieldName,namespaces:{}}),obj["range-query"]=value;break;case"boolean":void 0===group.value&&(group.value=1);var value={text:!!group.value};"json-property"===fieldData.classification&&(value.type="boolean"),setConstraint(value,fieldName,fieldData),obj["value-query"]=value;break;case"date":break;default:throw new Error("unexpected field type")}return obj}}function getConstraintName(query){return query["json-property"]?query["json-property"]:query.attribute?query.attribute.name:query.element?query.element.name:query.field?query.field.name:query["path-index"]?query["path-index"].text:void 0}function setConstraint(value,fieldName,fieldData){var claz=fieldData.classification;"json-property"===claz?value[claz]=fieldName:"element"===claz||"attribute"===claz?(value[claz]={name:fieldName,ns:fieldData.ns},"attribute"===claz&&(value.element={name:fieldData["parent-localname"],ns:fieldData["parent-namespace-uri"]})):"field"===claz&&(value[claz]={name:fieldName,collation:fieldData.collation})}function getFilterTemplate(type){var templates={group:{type:"group",subType:"",rules:[]},value:{field:"",subType:"",value:""},word:{field:"",subType:"",value:""},range:{field:"",subType:"",operator:"",value:null}};return angular.copy(templates[type])}angular.module("ml-sq-builder").factory("sqBuilderService",[function(){return{toFilters:toFilters,toQuery:toQuery}}])}(),function(){"use strict";function mlAnalyticsDashboard(){return{restrict:"E",templateUrl:"/templates/dashboard.html",controller:"SidebarCtrl"}}angular.module("ml.analyticsDashboard").directive("mlAnalyticsDashboard",mlAnalyticsDashboard)}(),function(){"use strict";angular.module("ml.analyticsDashboard.report").directive("mlSmartGrid",["$compile","MLRest","NgTableParams",function($compile,mlRest,NgTableParams){return{restrict:"A",replace:!1,templateUrl:"/templates/widgets/chart-builder.html",controller:function($scope,$http,$q,$filter){function getParameterValue(name){for(var parameters=$scope.widget.dataModelOptions.parameters,i=0;i<parameters.length;i++){var parameter=parameters[i],temp="#"+parameter.name+"#";if(name===temp)return parameter.value}return null}function setQueryParameters(query){var type=typeof query;if("object"==type)for(var key in query)if("text"===key||"value"===key){var value=getParameterValue(query[key]);null!==value&&(query[key]=value)}else setQueryParameters(query[key])}$scope.showModeButton=!0,$scope.widget.mode="View",$scope.model={queryConfig:null,queryError:null,config:null,configError:null,results:null,includeFrequency:!1,loadingConfig:!1,loadingResults:!1,groupingStrategy:"root",showBuilder:!1},$scope.widget.dataModelOptions.groupingStrategy&&($scope.model.groupingStrategy=$scope.widget.dataModelOptions.groupingStrategy),$scope.deferredAbort=null,$scope.data={},$scope.data.docs=[],$scope.data.fields={},$scope.data.operation="and-query",$scope.data.query=[],$scope.data.dimensions=[],$scope.data.needsUpdate=!0,$scope.data.needsRefresh=!0,$scope.data.directory=$scope.widget.dataModelOptions.directory,$scope.data.directory_model=null,$scope.data.parameters=$scope.widget.dataModelOptions.parameters,$scope.executor={},$scope.executor.transform="smart-filter",$scope.executor.disableRun=!0,$scope.executor.disableDownload=!0,$scope.grid={page:1,total:0},$scope.showDimensions=function(){var dimensions={dimensions:$scope.data.dimensions};return JSON.stringify(dimensions,null,2)},$scope.clearResults=function(){$scope.model.results=null,$scope.executor.dimensions=[],$scope.executor.results=[],$scope.executor.disableDownload=!0},$scope.getDbConfig=function(){var params={"rs:strategy":$scope.model.groupingStrategy};$scope.model.showBuilder=!1,$scope.model.loadingConfig=!0,$scope.model.config?params["rs:database"]=$scope.model.config["current-database"]:$scope.widget.dataModelOptions.database&&(params["rs:database"]=$scope.widget.dataModelOptions.database),$scope.clearResults(),$scope.model.includeFrequency=!1,$scope.model.queryConfig={"result-type":"group-by",rows:[],columns:[],computes:[],options:["headers=true"],query:{query:{}}},$scope.data.docs=[],$scope.data.fields={},$http.get("/v1/resources/index-discovery",{params:params}).then(function(response){if($scope.model.loadingConfig=!1,response.data.errorResponse)return void($scope.model.configError=response.data.errorResponse.message);$scope.model.config=response.data;var docsExist=!angular.equals($scope.model.config.docs,{});if(docsExist){$scope.model.configError=null;var docs=$scope.model.config.docs,keys=Object.keys(docs);keys.forEach(function(key){var doc={id:key,name:key,fields:{}},indexes=docs[key];indexes.forEach(function(index){var field={type:index["scalar-type"]};field["ref-type"]=index["ref-type"];var ns=index["namespace-uri"];(ns||""===ns)&&(field.ns=ns);var collation=index.collation;collation&&(field.collation=collation),index.localname?(index["parent-localname"]?(field.classification="attribute",field["parent-localname"]=index["parent-localname"],field["parent-namespace-uri"]=index["parent-namespace-uri"]):field.classification="element",doc.fields[index.localname]=field):index["path-expression"]&&(field.classification="path-expression",doc.fields[index["path-expression"]]=field)}),$scope.data.docs.push(doc)});for(var i=0;i<$scope.data.docs.length;i++){var model=$scope.data.docs[i];if(model.id===$scope.data.directory){$scope.data.directory_model=model,$scope.setDocument();break}}$scope.executor.disableRun=!1}else $scope.model.configError="No documents with range indices in the database";$scope.execute()},function(response){$scope.model.loadingConfig=!1,$scope.model.configError=response.data})},$scope.setDocument=function(){if($scope.data.directory_model){var directory=$scope.data.directory_model.id;$scope.data.directory=directory,$scope.executor.dimensions=[],$scope.executor.results=[];for(var i=0;i<$scope.data.docs.length;i++){var doc=$scope.data.docs[i];if(doc.id===directory){$scope.data.fields=doc.fields;break}}if($scope.data.operation="and-query",$scope.data.query=[],$scope.data.dimensions=[],directory===$scope.widget.dataModelOptions.directory){if($scope.widget.dataModelOptions.query&&$scope.widget.dataModelOptions.query.query&&$scope.widget.dataModelOptions.query.query.queries){var query=$scope.widget.dataModelOptions.query.query.queries[0],operation=Object.keys(query)[0];$scope.data.operation=operation,$scope.data.query=query[operation].queries}else $scope.data.operation="and-query",$scope.data.query=[];$scope.widget.dataModelOptions.dimensions?angular.copy($scope.widget.dataModelOptions.dimensions,$scope.data.dimensions):$scope.data.dimensions=[]}else $scope.data.operation="and-query",$scope.data.query=[],$scope.data.dimensions=[];$scope.data.needsUpdate=!0,$scope.data.needsRefresh=!0,$scope.model.showBuilder=!0}else $scope.model.showBuilder=!1},$scope.save=function(){$scope.widget.dataModelOptions.database=$scope.model.config["current-database"],$scope.widget.dataModelOptions.groupingStrategy=$scope.model.groupingStrategy,$scope.widget.dataModelOptions.directory=$scope.data.directory_model.id,$scope.widget.dataModelOptions.query={},$scope.widget.dataModelOptions.dimensions=[],angular.copy($scope.data.structuredQuery,$scope.widget.dataModelOptions.query),angular.copy($scope.data.dimensions,$scope.widget.dataModelOptions.dimensions),$scope.options.saveDashboard()},$scope.download=function(){var data=[],headerRow=[];$scope.model.results?($scope.model.results.headers.forEach(function(header){headerRow.push(header)}),data.push(headerRow),$scope.model.results.results.forEach(function(result){data.push(result)})):$scope.executor.results.length>0&&($scope.executor.dimensions.forEach(function(dimension){headerRow.push(dimension.name)}),data.push(headerRow),$scope.executor.results.forEach(function(result){data.push(result)})),$http({method:"POST",url:"/api/report/prepare",data:{data:data}}).then(function(response){window.location="/api/report/download"},function(response){})},$scope.execute=function(){var dimensions=$scope.widget.dataModelOptions.dimensions,count=0;dimensions.forEach(function(dimension){dimension.groupby&&count++}),$scope.model.loadingResults=!0,count?$scope.executeComplexQuery(count):$scope.executeSimpleQuery(1)},$scope.getColumn=function(name){for(var directory=$scope.widget.dataModelOptions.directory,fields=$scope.model.config.docs[directory],i=0;i<fields.length;i++){var field=fields[i];if(name===field.localname||name===field["path-expression"])return field}return null},$scope.executeComplexQuery=function(count){var queries=$scope.widget.dataModelOptions.query.query.queries;if(1===queries.length){var firstElement=queries[0],key=Object.keys(firstElement)[0];0===firstElement[key].queries.length&&(queries=[])}setQueryParameters(queries);var query={queries:queries};"View"===$scope.widget.mode&&$scope.executor.simple?query.qtext=$scope.executor.simple:query.qtext="";var params={},queryConfig=angular.copy($scope.model.queryConfig);$scope.model.config&&(params["rs:database"]=$scope.model.config["current-database"]),$scope.model.includeFrequency&&queryConfig.computes.push({fn:"frequency"}),queryConfig.query.query=query;var dimensions=$scope.widget.dataModelOptions.dimensions;dimensions.forEach(function(dimension){var key=Object.keys(dimension)[0];if("atomic"!==key){var name=dimension[key].field,column=$scope.getColumn(name);"groupby"===key?queryConfig.columns.push(column):queryConfig.computes.push({fn:key,ref:column})}}),$scope.model.loadingResults=!0,$scope.clearResults(),$scope.deferredAbort=$q.defer(),$http({method:"POST",url:"/v1/resources/group-by",params:params,data:queryConfig,timeout:$scope.deferredAbort.promise}).then(function(response){$scope.model.results=response.data,$scope.model.queryError=null,$scope.model.loadingResults=!1,$scope.createComplexTable($scope.model.results.headers,$scope.model.results.results),$scope.createHighcharts(count,$scope.model.results.headers,$scope.model.results.results),$scope.executor.disableDownload=!1},function(response){$scope.model.loadingResults=!1,0!==response.status&&($scope.model.queryError={title:response.statusText,description:response.data})})},$scope.createSimpleTable=function(headers,results){$scope.cols=[],headers.forEach(function(header){$scope.cols.push({field:header,title:header,sortable:header,show:!0})});var records=[];results.forEach(function(row){for(var record={},i=0;i<row.length;i++)record[headers[i]]=row[i];records.push(record)});var initialParams={page:1,count:$scope.widget.dataModelOptions.pageLength,sorting:{}};initialParams.sorting[headers[0]]="desc";var total=$scope.grid.total;$scope.tableParams=new NgTableParams(initialParams,{total:total,getData:function($defer,params){var orderedData=params.sorting()?$filter("orderBy")(records,$scope.tableParams.orderBy()):records;orderedData=params.filter()?$filter("filter")(orderedData,params.filter()):orderedData,$defer.resolve(orderedData)}})},$scope.createComplexTable=function(headers,results){$scope.cols=[],headers.forEach(function(header){$scope.cols.push({field:header,title:header,sortable:header,show:!0})});var records=[];results.forEach(function(row){for(var record={},i=0;i<row.length;i++)record[headers[i]]=row[i];records.push(record)});var initialParams={page:1,count:$scope.widget.dataModelOptions.pageLength,sorting:{}};initialParams.sorting[headers[0]]="desc",$scope.tableParams=new NgTableParams(initialParams,{total:records.length,getData:function($defer,params){var orderedData=params.sorting()?$filter("orderBy")(records,$scope.tableParams.orderBy()):records;orderedData=params.filter()?$filter("filter")(orderedData,params.filter()):orderedData,params.total(orderedData.length),$defer.resolve(orderedData.slice((params.page()-1)*params.count(),params.page()*params.count()))}})},$scope.fetchPage=function(){var start=1+($scope.grid.page-1)*$scope.widget.dataModelOptions.pageLength;$scope.model.loadingResults=!0,$scope.executeSimpleQuery(start)},$scope.executeSimpleQuery=function(start){var directory="/"+$scope.widget.dataModelOptions.directory+"/",queries=$scope.widget.dataModelOptions.query.query.queries;setQueryParameters(queries);var query={queries:queries};"View"===$scope.widget.mode&&$scope.executor.simple&&(query.qtext=$scope.executor.simple);var params={directory:directory,pageLength:$scope.widget.dataModelOptions.pageLength,start:start,category:"content",view:"metadata",format:"json"};$scope.clearResults();var dimensions=$scope.widget.dataModelOptions.dimensions,headers=[];dimensions.forEach(function(dimension){var key=Object.keys(dimension)[0],name=dimension[key].field,type=$scope.data.fields[name].type,item={name:name,type:type};$scope.executor.dimensions.push(item),headers.push(name)}),$scope.executor.transform&&(params.transform=$scope.executor.transform,$scope.executor.dimensions.forEach(function(dimension){params["trans:"+dimension.name]=dimension.type})),mlRest.search(params,search).then(function(response){$scope.model.loadingResults=!1;var contentType=response.headers("content-type"),pageResults=MarkLogic.Util.parseMultiPart(response.data,contentType),results=pageResults.results;$scope.grid.total=pageResults.metadata.total,results.forEach(function(result){var item=[];$scope.executor.dimensions.forEach(function(dimension){var name=dimension.name;item.push(result[name])}),$scope.executor.results.push(item)}),$scope.executor.disableDownload=!1,$scope.createSimpleTable(headers,$scope.executor.results)})},$scope.createHighcharts=function(count,headers,results){var chartType=$scope.widget.dataModelOptions.chart;"column"===chartType?$scope.createColumnHighcharts(count,headers,results):$scope.createPieHighcharts(count,headers,results)},$scope.createColumnHighcharts=function(count,headers,results){for(var categories=[],series=[],i=count;i<headers.length;i++)series.push({name:headers[i],data:[]});results.forEach(function(row){for(var groups=[],i=0;count>i;i++)groups.push(row[i]);for(categories.push(groups.join(",")),i=count;i<row.length;i++)series[i-count].data.push(row[i])}),$scope.highchartConfig={options:{chart:{type:"column"},tooltip:{shared:!0,useHTML:!0,borderWidth:1,borderRadius:10,headerFormat:'<span style="font-size:16px">{point.key}</span><table>',pointFormat:'<tr><td style="color:{series.color};padding:0">{series.name}: </td><td style="padding:0"><b>{point.y:.1f}</b></td></tr>',footerFormat:"</table>"},plotOptions:{column:{pointPadding:.2,borderWidth:0}}},title:{text:""},xAxis:{categories:categories},yAxis:{title:{text:""}},series:series}},$scope.createPieHighcharts=function(count,headers,results){for(var colors=Highcharts.getOptions().colors,measures=[],series=[],i=count;i<headers.length;i++)series.push({name:headers[i],data:[]}),measures.push(headers[i]);var rings=series.length;if(rings>1){var percent=Math.floor(100/rings),ring=0;for(series[ring].size=percent+"%",ring=1;rings>ring;ring++)series[ring].innerSize=percent*ring+"%",series[ring].size=percent*(ring+1)+"%"}results.forEach(function(row){for(var groups=[],i=0;count>i;i++)groups.push(row[i]);var category=groups.join(",");for(i=count;i<row.length;i++)series[i-count].data.push({name:category,color:colors[i-count],y:row[i]})});var title="Measures: "+measures;$scope.highchartConfig={options:{chart:{type:"pie"},tooltip:{shared:!0,useHTML:!0,borderWidth:1,borderRadius:10,headerFormat:'<span style="font-size:16px">{point.key}</span><table>',pointFormat:'<tr><td style="color:{series.color};padding:0">{series.name}: </td><td style="padding:0"><b>{point.y:.1f}</b></td></tr>',footerFormat:"</table>"},plotOptions:{pie:{showInLegend:!0,shadow:!1,center:["50%","50%"],dataLabels:{enabled:!0,useHTML:!1,format:"<b>{point.name} {series.name}</b>: {point.percentage:.1f}%",style:{color:Highcharts.theme&&Highcharts.theme.contrastTextColor||"black"}}}}},credits:{enabled:!1},title:{text:title},yAxis:{title:{text:""}},series:series}},$scope.getDbConfig()},link:function($scope,element,attrs){$scope.element=element,$scope.$watch("widget.mode",function(mode){$scope.clearResults(),$scope.data.needsUpdate=!0,$scope.data.needsRefresh=!0})}}}])}(),function(){"use strict";angular.module("ml-sq-builder").directive("sqBuilderChooser",["RecursionHelper","groupClassHelper",function(RH,groupClassHelper){return{scope:{sqFields:"=",sqParameters:"=",item:"=sqBuilderChooser",onRemove:"&"},templateUrl:"/ml-sq-builder/ChooserDirective.html",compile:function(element){return RH.compile(element,function(scope,el,attrs){var depth=scope.depth=+attrs.depth,item=scope.item;scope.getGroupClassName=function(){var level=depth;return"group"===item.type&&level++,groupClassHelper(level)}})}}}])}(),function(){"use strict";angular.module("ml-sq-builder").directive("sqBuilderGroup",["RecursionHelper","groupClassHelper",function(RH,groupClassHelper){return{scope:{sqFields:"=",sqParameters:"=",group:"=sqBuilderGroup",onRemove:"&"},templateUrl:"/ml-sq-builder/GroupDirective.html",compile:function(element){return RH.compile(element,function(scope,el,attrs){var depth=scope.depth=+attrs.depth,group=scope.group;scope.addRule=function(){group.rules.push({})},scope.addGroup=function(){group.rules.push({type:"group",subType:"and-query",rules:[]})},scope.removeChild=function(idx){group.rules.splice(idx,1)},scope.getGroupClassName=function(){return groupClassHelper(depth+1)}})}}}])}(),function(){"use strict";angular.module("ml-sq-builder").directive("sqBuilderRule",[function(){return{scope:{sqFields:"=",sqParameters:"=",rule:"=sqBuilderRule",onRemove:"&"},templateUrl:"/ml-sq-builder/RuleDirective.html",link:function(scope){scope.getType=function(){var fields=scope.sqFields,field=scope.rule.field;if(fields&&field)return fields[field].type}}}}])}(),function(){"use strict";angular.module("ml-sq-builder").directive("sqBuilder",["sqBuilderService",function(sqBuilderService){return{scope:{data:"=sqBuilder"},templateUrl:"/ml-sq-builder/BuilderDirective.html",link:function(scope){var data=scope.data;scope.filters=[],scope.removeChild=function(idx){scope.filters.splice(idx,1)},scope.addRule=function(){scope.filters.push({})},scope.addGroup=function(){scope.filters.push({type:"group",subType:"and-query",rules:[]})},scope.renderStructuredQuery=function(){var query=scope.getStructuredQuery();return JSON.stringify(query,null,2)},scope.showStructuredQuery=function(){scope.structuredQueryIsHidden=!1},scope.hideStructuredQuery=function(){scope.structuredQueryIsHidden=!0},scope.hideStructuredQuery(),scope.getStructuredQuery=function(){var query={query:{queries:[]}},rootQuery={};return rootQuery[scope.data.operation]={queries:scope.data.query},query.query.queries.push(rootQuery),query},scope.$watch("data.needsUpdate",function(curr){curr&&(scope.filters=sqBuilderService.toFilters(data.query,scope.data.fields),scope.data.needsUpdate=!1)}),scope.$watch("filters",function(curr){curr&&(data.query=sqBuilderService.toQuery(scope.filters,scope.data.fields))},!0),data.structuredQuery=scope.getStructuredQuery()}}}])}(),function(){"use strict";angular.module("ml-sq-builder").directive("sqType",[function(){return{scope:{type:"=sqType",rule:"=",guide:"=",parameters:"="},template:'<ng-include src="getTemplateUrl()" />',link:function(scope){scope.getTemplateUrl=function(){var type=scope.type;if(type)return type=type.charAt(0).toUpperCase()+type.slice(1),"/ml-sq-builder/types/"+type+".html"},scope.booleans=["False","True"],scope.booleansOrder=["True","False"],scope.inputNeeded=function(){var needs=["value-query","word-query","EQ","NE","GT","GE","LT","LE"];return~needs.indexOf(scope.rule.subType)}}}}])}(),function(angular){"use strict";var app=angular.module("ml-dimension-builder");app.directive("dimensionBuilder",["dimensionBuilderService",function(dimensionBuilderService){return{scope:{data:"=dimensionBuilder"},templateUrl:"ml-dimension-builder/BuilderDirective.html",link:function(scope){var data=scope.data;scope.facets=[],scope.removeDimension=function(idx){scope.facets.splice(idx,1)},scope.addDimension=function(){scope.facets.push({})},scope.$watch("data.needsRefresh",function(curr){curr&&(scope.facets=dimensionBuilderService.toFacets(data.dimensions,scope.data.fields),scope.data.needsRefresh=!1)}),scope.$watch("facets",function(curr){curr&&(data.dimensions=dimensionBuilderService.toDimensions(scope.facets,scope.data.fields))},!0)}}}]),app.directive("dimensionBuilderChooser",[function(){return{scope:{dimensionFields:"=",item:"=dimensionBuilderChooser",onRemove:"&"},templateUrl:"ml-dimension-builder/ChooserDirective.html"}}]),app.directive("dimensionBuilderRule",[function(){return{scope:{dimensionFields:"=",rule:"=dimensionBuilderRule",onRemove:"&"},templateUrl:"ml-dimension-builder/RuleDirective.html",link:function(scope){scope.getType=function(){var fields=scope.dimensionFields,field=scope.rule.field;if(fields&&field)return fields[field].type}}}}]),app.directive("dimensionType",[function(){return{scope:{type:"=dimensionType",rule:"=",guide:"="},template:'<ng-include src="getTemplateUrl()" />',link:function(scope){scope.getTemplateUrl=function(){var type=scope.type;if(type)return type=type.charAt(0).toUpperCase()+type.slice(1),"ml-dimension-builder/types/"+type+".html"},scope.inputNeeded=function(){var needs=[];return~needs.indexOf(scope.rule.operation)}}}}])}(window.angular),function(angular){"use strict";function toFacets(dimensions,fieldMap){var facets=dimensions.map(parseDimensionGroup.bind(dimensions,fieldMap));return facets}function toDimensions(facets,fieldMap){var dimensions=facets.map(parseFacetGroup.bind(facets,fieldMap)).filter(function(item){return!!item});return dimensions}function parseDimensionGroup(fieldMap,group,truthy){truthy!==!1&&(truthy=!0);var operation=Object.keys(group)[0],obj=getDimensionTemplate("item");switch(operation){case"avg":case"count":case"max":case"median":case"min":case"stddev":case"stddev-population":case"sum":case"variance":case"variance-population":case"groupby":case"atomic":obj.field=group[operation].field,obj.operation=operation,delete obj.value;break;default:obj.field=Object.keys(group[operation])[0]}return obj}function parseFacetGroup(fieldMap,group){var obj={};if("group"===group.type)return obj[group.operation]=group.rules.map(parseFacetGroup.bind(group,fieldMap)).filter(function(item){return!!item}),obj;var fieldName=group.field,fieldData=fieldMap[fieldName];if(fieldName){switch(fieldData.type){case"string":case"int":case"long":case"decimal":case"boolean":case"date":if(!group.operation)return;obj[group.operation]={},obj[group.operation].field=fieldName;break;default:throw new Error("unexpected operation")}return obj}}function getDimensionTemplate(type){var templates={item:{field:"",operation:"",value:""}};return angular.copy(templates[type])}angular.module("ml-dimension-builder").factory("dimensionBuilderService",[function(){return{toFacets:toFacets,toDimensions:toDimensions}}])}(window.angular),function(angular){"use strict";angular.module("ml-dimension-builder").run(["$templateCache",function($templateCache){$templateCache.put("ml-dimension-builder/BuilderDirective.html",'<div class="dimension-builder">  <div class="filter-panels">    <div class="list-group form-inline">      <div data-ng-repeat="facet in facets" data-dimension-builder-chooser="facet" data-dimension-fields="data.fields" data-on-remove="removeDimension($index)" data-depth="0"></div>      <div class="list-group-item actions">        <a class="btn btn-xs btn-primary" title="Add Dimension" data-ng-click="addDimension()">          <i class="fa fa-plus"> Add Dimension</i>        </a>     </div>    </div>  </div></div>'),$templateCache.put("ml-dimension-builder/ChooserDirective.html",'<div class="list-group-item dimension-builder-chooser">  <div data-dimension-builder-rule="item" data-dimension-fields="dimensionFields" data-on-remove="onRemove()"></div></div>'),$templateCache.put("ml-dimension-builder/RuleDirective.html",'<div class="dimension-builder-rule">  <select class="form-control" data-ng-model="rule.field" data-ng-options="key as key for (key, value) in dimensionFields"></select>  <span data-dimension-type="getType()" data-rule="rule" data-guide="dimensionFields[rule.field]"></span>  <a class="btn btn-xs btn-danger remover" data-ng-click="onRemove()">    <i class="fa fa-minus"></i>  </a></div>'),$templateCache.put("ml-dimension-builder/types/String.html",'<span class="string-rule">  <select data-ng-model="rule.operation" class="form-control">    <optgroup label="Text">      <option value="count">count</option>    </optgroup>    <optgroup label="Generic">      <option value="groupby">group by</option>      <option value="atomic">atomic</option>    </optgroup>  </select>  <input data-ng-if="inputNeeded()" class="form-control" data-ng-model="rule.value" type="text" /></span>'),$templateCache.put("ml-dimension-builder/types/Int.html",'<span class="integer-rule">  <select data-ng-model="rule.operation" class="form-control">    <optgroup label="Function">      <option value="avg">avg</option>      <option value="count">count</option>      <option value="max">max</option>      <option value="median">median</option>      <option value="min">min</option>      <option value="stddev">stddev</option>      <option value="stddev-population">stddev-population</option>      <option value="sum">sum</option>      <option value="variance">variance</option>      <option value="variance-population">variance-population</option>    </optgroup>    <optgroup label="Generic">      <option value="groupby">group by</option>      <option value="atomic">atomic</option>    </optgroup>  </select>  <input data-ng-if="inputNeeded()" class="form-control" data-ng-model="rule.value" type="number" min="{{ guide.minimum }}" max="{{ guide.maximum }}" /></span>'),$templateCache.put("ml-dimension-builder/types/Long.html",'<span class="integer-rule">  <select data-ng-model="rule.operation" class="form-control">    <optgroup label="Function">      <option value="avg">avg</option>      <option value="count">count</option>      <option value="max">max</option>      <option value="median">median</option>      <option value="min">min</option>      <option value="stddev">stddev</option>      <option value="stddev-population">stddev-population</option>      <option value="sum">sum</option>      <option value="variance">variance</option>      <option value="variance-population">variance-population</option>    </optgroup>    <optgroup label="Generic">      <option value="groupby">group by</option>      <option value="atomic">atomic</option>    </optgroup>  </select>  <input data-ng-if="inputNeeded()" class="form-control" data-ng-model="rule.value" type="number" min="{{ guide.minimum }}" max="{{ guide.maximum }}" /></span>'),$templateCache.put("ml-dimension-builder/types/Decimal.html",'<span class="decimal-rule">  <select data-ng-model="rule.operation" class="form-control">    <optgroup label="Function">      <option value="avg">avg</option>      <option value="count">count</option>      <option value="max">max</option>      <option value="median">median</option>      <option value="min">min</option>      <option value="stddev">stddev</option>      <option value="stddev-population">stddev-population</option>      <option value="sum">sum</option>      <option value="variance">variance</option>      <option value="variance-population">variance-population</option>    </optgroup>    <optgroup label="Generic">      <option value="groupby">group by</option>      <option value="atomic">atomic</option>    </optgroup>  </select>  <input data-ng-if="inputNeeded()" class="form-control" data-ng-model="rule.value" type="number" min="{{ guide.minimum }}" max="{{ guide.maximum }}" /></span>'),
$templateCache.put("ml-dimension-builder/types/Boolean.html",'<span class="boolean-rule">  <select data-ng-model="rule.operation" class="form-control">    <optgroup label="Generic">      <option value="groupby">group by</option>      <option value="atomic">atomic</option>    </optgroup>  </select></span>'),$templateCache.put("ml-dimension-builder/types/Date.html",'<span class="date-rule">  <select data-ng-model="rule.operation" class="form-control">    <optgroup label="Generic">      <option value="groupby">group by</option>      <option value="atomic">Standard</option>    </optgroup>  </select></span>')}])}(window.angular),function(angular){"use strict";angular.module("ml-index-builder",[])}(window.angular),function(angular){"use strict";var app=angular.module("ml-index-builder");app.directive("indexBuilder",["indexBuilderService",function(indexBuilderService){return{scope:{data:"=indexBuilder"},templateUrl:"ml-index-builder/BuilderDirective.html",link:function(scope){var data=scope.data;scope.facets=[],scope.removeIndex=function(idx){scope.facets.splice(idx,1)},scope.addIndex=function(){scope.facets.push({})},scope.$watch("data.needsRefresh",function(curr){curr&&(scope.facets=indexBuilderService.toFacets(data.indexes,scope.data.fields),scope.data.needsRefresh=!1)}),scope.$watch("facets",function(curr){curr&&(data.indexes=indexBuilderService.toIndexes(scope.facets,scope.data.fields))},!0)}}}]),app.directive("indexBuilderChooser",[function(){return{scope:{indexFields:"=",item:"=indexBuilderChooser",onRemove:"&"},templateUrl:"ml-index-builder/ChooserDirective.html"}}]),app.directive("indexBuilderRule",[function(){return{scope:{indexFields:"=",rule:"=indexBuilderRule",onRemove:"&"},templateUrl:"ml-index-builder/RuleDirective.html",link:function(scope){scope.getType=function(){var fields=scope.indexFields,field=scope.rule.field;if(fields&&field)return fields[field].type}}}}]),app.directive("indexType",[function(){return{scope:{type:"=indexType",rule:"=",guide:"="},template:'<ng-include src="getTemplateUrl()" />',link:function(scope){scope.getTemplateUrl=function(){var type=scope.type;if(type)return type=type.charAt(0).toUpperCase()+type.slice(1),"ml-index-builder/types/"+type+".html"},scope.inputNeeded=function(){var needs=["int","unsignedInt","long","unsignedLong","float","double","decimal","dateTime","time","date","gYearMonth","gYear","gMonth","gDay","yearMonthDuration","dayTimeDuration","string","anyURI"];return~needs.indexOf(scope.rule.operation)}}}}])}(window.angular),function(angular){"use strict";function toFacets(indexes,fieldMap){var facets=indexes.map(parseIndexGroup.bind(indexes,fieldMap));return facets}function toIndexes(facets,fieldMap){var indexes=facets.map(parseFacetGroup.bind(facets,fieldMap)).filter(function(item){return!!item});return indexes}function parseIndexGroup(fieldMap,group,truthy){truthy!==!1&&(truthy=!0);var operation=Object.keys(group)[0],obj=getIndexTemplate("item");switch(operation){case"int":case"unsignedInt":case"long":case"unsignedLong":case"float":case"double":case"decimal":case"dateTime":case"time":case"date":case"gYearMonth":case"gYear":case"gMonth":case"gDay":case"yearMonthDuration":case"dayTimeDuration":case"string":case"anyURI":obj.field=group[operation].field,obj.operation=operation,obj.value=group[operation].value;break;default:obj.field=Object.keys(group[operation])[0]}return obj}function parseFacetGroup(fieldMap,group){var obj={};if("group"===group.type)return obj[group.operation]=group.rules.map(parseFacetGroup.bind(group,fieldMap)).filter(function(item){return!!item}),obj;var fieldName=group.field,fieldData=fieldMap[fieldName];if(fieldName){switch(fieldData.type){case"element":if(!group.operation)return;obj[group.operation]={},obj[group.operation].field=fieldName,obj[group.operation].value=group.value;break;default:throw new Error("unexpected type")}return obj}}function getIndexTemplate(type){var templates={item:{field:"",operation:"",value:""}};return angular.copy(templates[type])}angular.module("ml-index-builder").factory("indexBuilderService",[function(){return{toFacets:toFacets,toIndexes:toIndexes}}])}(window.angular),function(angular){"use strict";angular.module("ml-index-builder").run(["$templateCache",function($templateCache){$templateCache.put("ml-index-builder/BuilderDirective.html",'<div class="index-builder">  <div class="filter-panels">    <div class="list-group form-inline">      <div data-ng-repeat="facet in facets" data-index-builder-chooser="facet" data-index-fields="data.fields" data-on-remove="removeIndex($index)" data-depth="0"></div>      <div class="list-group-item actions">        <a class="btn btn-xs btn-primary" title="Add Index" data-ng-click="addIndex()">          <i class="fa fa-plus"> Add Index</i>        </a>     </div>    </div>  </div></div>'),$templateCache.put("ml-index-builder/ChooserDirective.html",'<div class="list-group-item index-builder-chooser">  <div data-index-builder-rule="item" data-index-fields="indexFields" data-on-remove="onRemove()"></div></div>'),$templateCache.put("ml-index-builder/RuleDirective.html",'<div class="index-builder-rule">  <select class="form-control" data-ng-model="rule.field" data-ng-options="key as key for (key, value) in indexFields"></select>  <span data-index-type="getType()" data-rule="rule" data-guide="indexFields[rule.field]"></span>  <a class="btn btn-xs btn-danger remover" data-ng-click="onRemove()">    <i class="fa fa-minus"></i>  </a></div>'),$templateCache.put("ml-index-builder/types/Element.html",'<span class="element-rule">  <select data-ng-model="rule.operation" class="form-control">    <optgroup label="Scalar Type">      <option value="int">int</option>      <option value="unsignedInt">unsignedInt</option>      <option value="long">long</option>      <option value="unsignedLong">unsignedLong</option>      <option value="float">float</option>      <option value="double">double</option>      <option value="decimal">decimal</option>      <option value="dateTime">dateTime</option>      <option value="time">time</option>      <option value="date">date</option>      <option value="gYearMonth">gYearMonth</option>      <option value="gYear">gYear</option>      <option value="gMonth">gMonth</option>      <option value="gDay">gDay</option>      <option value="yearMonthDuration">yearMonthDuration</option>      <option value="dayTimeDuration">dayTimeDuration</option>      <option value="string">string</option>      <option value="anyURI">anyURI</option>    </optgroup>  </select>  <input data-ng-if="inputNeeded()" class="form-control" data-ng-model="rule.value" type="text" placeholder="namespace uri" /></span>')}])}(window.angular);var MarkLogic;!function(MarkLogic){!function(Util){function parseMultiPart(body,contentType){function parseContentDisposition(str){for(var qescRegExp=/\\([\u0000-\u007f])/g,params={},parts=str.split(";"),i=0;i<parts.length;i++){var part=parts[i].trim(),segments=part.split("=");if(2===segments.length){var key=segments[0],value=segments[1];'"'===value[0]&&(value=value.substr(1,value.length-2).replace(qescRegExp,"$1")),params[key]=value}}return params}var contentTypeLen=contentType.length,boundary=null;if(contentTypeLen>=15&&"multipart/mixed"===contentType.substr(0,15)&&(boundary=contentType.replace(/^multipart.mixed\s*;\s*boundary\s*=\s*([^\s;]+)([\s;].*)?$/,"$1"),boundary.length===contentTypeLen))return null;boundary="\r\n--"+boundary;var s=body;s="\r\n"+s;for(var parts=s.split(new RegExp(boundary)),docs=[],metadata=null,i=1;i<parts.length-1;i++)for(var subparts=parts[i].split("\r\n\r\n"),headers=subparts[0].split("\r\n"),j=1;j<headers.length;j++){var header=headers[j],segments=header.split(":");if(2===segments.length&&"content-disposition"===segments[0].toLowerCase()){var params=parseContentDisposition(segments[1]),uri=params.filename;if(uri){var doc=JSON.parse(subparts[1]);doc.uri=uri,docs.push(doc);break}metadata=JSON.parse(subparts[1])}}return{results:docs,metadata:metadata}}Util.parseMultiPart=parseMultiPart}(MarkLogic.Util||(MarkLogic.Util={}));MarkLogic.Util}(MarkLogic||(MarkLogic={})),function(){"use strict";angular.module("ml.analyticsDashboard").controller("ReportDesignerCtrl",["$scope","$stateParams","$interval","ReportData","ReportService","WidgetDefinitions",function($scope,$stateParams,$interval,ReportData,ReportService,WidgetDefinitions){var store={},storage={getItem:function(key){return store[key]},setItem:function(key,value){store[key]=value,$scope.report.widgets=value.widgets,$scope.saveWidgets()},removeItem:function(key){delete store[key]}};$scope.report={},$scope.report.uri=decodeURIComponent($stateParams.uri),angular.extend($scope.report,ReportData.data);var defaultWidgets=null;defaultWidgets=$scope.report.widgets?_.map($scope.report.widgets,function(widget){return{name:widget.name,title:widget.title,attrs:widget.attrs,style:widget.size,dataModelOptions:widget.dataModelOptions}}):[],$scope.reportDashboardOptions={widgetButtons:!0,widgetDefinitions:WidgetDefinitions,defaultWidgets:defaultWidgets,hideToolbar:!1,hideWidgetName:!0,explicitSave:!1,stringifyStorage:!1,storage:storage,storageId:$scope.report.uri},ReportService.setDashboardOptions($scope.reportDashboardOptions),$scope.addWidget=function(directive){$scope.dashboardOptions.addWidget({name:directive})},$scope.$on("widgetAdded",function(event,widget){event.stopPropagation()}),$scope.saveWidgets=function(){ReportService.updateReport($scope.report).then(function(response){})}}])}(),function(){"use strict";angular.module("ml.analyticsDashboard").controller("ReportEditorCtrl",["$scope","$stateParams","$state","ReportData","ReportService",function($scope,$stateParams,$state,ReportData,ReportService){$scope.report={},$scope.report.uri=decodeURIComponent($stateParams.uri),angular.extend($scope.report,ReportData.data),$scope.setOption=function(option){$scope.report.privacy=option},$scope.isActive=function(option){return option===$scope.report.privacy},$scope.updateReport=function(){ReportService.updateReport($scope.report).then(function(response){$state.go("root.analytics-dashboard.home")})}}])}(),function(){"use strict";function HomeCtrl(){}angular.module("ml.analyticsDashboard").controller("HomeCtrl",HomeCtrl),HomeCtrl.$inject=[]}(),function(){"use strict";angular.module("ml.analyticsDashboard").controller("NewReportCtrl",["$scope","$location","$rootScope","userService","ReportService",function($scope,$location,$rootScope,userService,ReportService){$scope.currentUser=null,$scope.report={},$scope.report.privacy="public",$scope.$watch(userService.currentUser,function(newValue){$scope.currentUser=newValue}),$scope.setOption=function(option){$scope.report.privacy=option},$scope.isActive=function(option){return option===$scope.report.privacy},$scope.createReport=function(){ReportService.createReport($scope.report).then(function(response){var uri=response.replace(/(.*\?uri=)/,"");$scope.report.uri=uri,$rootScope.$broadcast("ReportCreated",$scope.report),$location.path("/analytics-dashboard/designer"+uri)})}}])}(),function(){"use strict";angular.module("ml.analyticsDashboard").controller("ReportRemoverCtrl",["$rootScope","$scope","$stateParams","$state","ReportService",function($rootScope,$scope,$stateParams,$state,ReportService){$scope.report.uri=decodeURIComponent($stateParams.uri),$scope.deleteReport=function(){ReportService.deleteReport($scope.report.uri).then(function(response){$rootScope.$broadcast("ReportDeleted",$scope.report.uri),$state.go("root.analytics-dashboard.home")},function(response){alert(response)})},$scope.cancel=function(){$state.go("root.analytics-dashboard.home")}}])}(),function(){"use strict";angular.module("ml.analyticsDashboard").controller("SidebarCtrl",["$rootScope","$scope","$location","$state","userService","ReportService","WidgetDefinitions",function($rootScope,$scope,$location,$state,userService,ReportService,WidgetDefinitions){$scope.currentUser=null,$scope.search={},$scope.showLoading=!1,$scope.widgetDefs=WidgetDefinitions,$scope.reports=[],$scope.report={},$scope.$watch(userService.currentUser,function(newValue){$scope.currentUser=newValue,$scope.getReports()}),$scope.getReports=function(){$scope.showLoading=!0,ReportService.getReports().then(function(response){var contentType=response.headers("content-type"),page=MarkLogic.Util.parseMultiPart(response.data,contentType);$scope.reports=page.results,$scope.showLoading=!1},function(){$scope.showLoading=!1})},$scope.addWidget=function(widgetDef){ReportService.getDashboardOptions($scope.reportDashboardOptions).addWidget({name:widgetDef.name})},$scope.gotoDesigner=function(uri){$location.path("/analytics-dashboard/designer"+uri)},$scope.showReportEditor=function(report){$scope.report.uri=report.uri,$location.path("/analytics-dashboard/editor"+report.uri)},$scope.showReportRemover=function(report){$scope.report.uri=report.uri,$location.path("/analytics-dashboard/remover"+report.uri)},$scope.createReport=function(){$location.path("/analytics-dashboard/new-report")},$scope.setReport=function(report){angular.extend($scope.report,report)},$scope.updateTableRow=function(){for(var i=0;i<$scope.reports.length;i++){var report=$scope.reports[i];if(report.uri===$scope.report.uri){report.name=$scope.report.name,report.description=$scope.report.description;break}}},$scope.$on("ReportCreated",function(event,report){$scope.reports.push(report)}),$scope.$on("ReportDeleted",function(event,reportUri){for(var i=0;i<$scope.reports.length;i++)if(reportUri===$scope.reports[i].uri){$scope.reports.splice(i,1);break}});var currentPath=$location.path();"/analytics-dashboard"!==currentPath&&"/analytics-dashboard/"!==currentPath||$state.go("root.analytics-dashboard.home")}])}(),function($){$.fn.drag=function(str,arg,opts){var type="string"==typeof str?str:"",fn=$.isFunction(str)?str:$.isFunction(arg)?arg:null;return 0!==type.indexOf("drag")&&(type="drag"+type),opts=(str==fn?arg:opts)||{},fn?this.bind(type,opts,fn):this.trigger(type)};var $event=$.event,$special=$event.special,drag=$special.drag={defaults:{which:1,distance:0,not:":input",handle:null,relative:!1,drop:!0,click:!1},datakey:"dragdata",noBubble:!0,add:function(obj){var data=$.data(this,drag.datakey),opts=obj.data||{};data.related+=1,$.each(drag.defaults,function(key,def){void 0!==opts[key]&&(data[key]=opts[key])})},remove:function(){$.data(this,drag.datakey).related-=1},setup:function(){if(!$.data(this,drag.datakey)){var data=$.extend({related:0},drag.defaults);$.data(this,drag.datakey,data),$event.add(this,"touchstart mousedown",drag.init,data),this.attachEvent&&this.attachEvent("ondragstart",drag.dontstart)}},teardown:function(){var data=$.data(this,drag.datakey)||{};data.related||($.removeData(this,drag.datakey),$event.remove(this,"touchstart mousedown",drag.init),drag.textselect(!0),this.detachEvent&&this.detachEvent("ondragstart",drag.dontstart))},init:function(event){if(!drag.touched){var results,dd=event.data;if(!(0!=event.which&&dd.which>0&&event.which!=dd.which)&&!$(event.target).is(dd.not)&&(!dd.handle||$(event.target).closest(dd.handle,event.currentTarget).length)&&(drag.touched="touchstart"==event.type?this:null,dd.propagates=1,dd.mousedown=this,dd.interactions=[drag.interaction(this,dd)],dd.target=event.target,dd.pageX=event.pageX,dd.pageY=event.pageY,dd.dragging=null,results=drag.hijack(event,"draginit",dd),dd.propagates))return results=drag.flatten(results),results&&results.length&&(dd.interactions=[],$.each(results,function(){dd.interactions.push(drag.interaction(this,dd))})),dd.propagates=dd.interactions.length,dd.drop!==!1&&$special.drop&&$special.drop.handler(event,dd),drag.textselect(!1),drag.touched?$event.add(drag.touched,"touchmove touchend",drag.handler,dd):$event.add(document,"mousemove mouseup",drag.handler,dd),!drag.touched||dd.live?!1:void 0}},interaction:function(elem,dd){var offset=$(elem)[dd.relative?"position":"offset"]()||{top:0,left:0};return{drag:elem,callback:new drag.callback,droppable:[],offset:offset}},handler:function(event){var dd=event.data;switch(event.type){case!dd.dragging&&"touchmove":event.preventDefault();case!dd.dragging&&"mousemove":if(Math.pow(event.pageX-dd.pageX,2)+Math.pow(event.pageY-dd.pageY,2)<Math.pow(dd.distance,2))break;event.target=dd.target,drag.hijack(event,"dragstart",dd),dd.propagates&&(dd.dragging=!0);case"touchmove":event.preventDefault();case"mousemove":if(dd.dragging){if(drag.hijack(event,"drag",dd),dd.propagates){dd.drop!==!1&&$special.drop&&$special.drop.handler(event,dd);break}event.type="mouseup"}case"touchend":case"mouseup":default:drag.touched?$event.remove(drag.touched,"touchmove touchend",drag.handler):$event.remove(document,"mousemove mouseup",drag.handler),dd.dragging&&(dd.drop!==!1&&$special.drop&&$special.drop.handler(event,dd),drag.hijack(event,"dragend",dd)),drag.textselect(!0),dd.click===!1&&dd.dragging&&$.data(dd.mousedown,"suppress.click",(new Date).getTime()+5),dd.dragging=drag.touched=!1}},hijack:function(event,type,dd,x,elem){if(dd){var result,ia,callback,orig={event:event.originalEvent,type:event.type},mode=type.indexOf("drop")?"drag":"drop",i=x||0,len=isNaN(x)?dd.interactions.length:x;event.type=type,event.originalEvent=null,dd.results=[];do if(ia=dd.interactions[i]){if("dragend"!==type&&ia.cancelled)continue;callback=drag.properties(event,dd,ia),ia.results=[],$(elem||ia[mode]||dd.droppable).each(function(p,subject){return callback.target=subject,event.isPropagationStopped=function(){return!1},result=subject?$event.dispatch.call(subject,event,callback):null,result===!1?("drag"==mode&&(ia.cancelled=!0,dd.propagates-=1),"drop"==type&&(ia[mode][p]=null)):"dropinit"==type&&ia.droppable.push(drag.element(result)||subject),"dragstart"==type&&(ia.proxy=$(drag.element(result)||ia.drag)[0]),ia.results.push(result),delete event.result,"dropinit"!==type?result:void 0}),dd.results[i]=drag.flatten(ia.results),"dropinit"==type&&(ia.droppable=drag.flatten(ia.droppable)),"dragstart"!=type||ia.cancelled||callback.update()}while(++i<len);return event.type=orig.type,event.originalEvent=orig.event,drag.flatten(dd.results)}},properties:function(event,dd,ia){var obj=ia.callback;return obj.drag=ia.drag,obj.proxy=ia.proxy||ia.drag,obj.startX=dd.pageX,obj.startY=dd.pageY,obj.deltaX=event.pageX-dd.pageX,obj.deltaY=event.pageY-dd.pageY,obj.originalX=ia.offset.left,obj.originalY=ia.offset.top,obj.offsetX=obj.originalX+obj.deltaX,obj.offsetY=obj.originalY+obj.deltaY,obj.drop=drag.flatten((ia.drop||[]).slice()),obj.available=drag.flatten((ia.droppable||[]).slice()),obj},element:function(arg){return arg&&(arg.jquery||1==arg.nodeType)?arg:void 0},flatten:function(arr){return $.map(arr,function(member){return member&&member.jquery?$.makeArray(member):member&&member.length?drag.flatten(member):member})},textselect:function(bool){$(document)[bool?"unbind":"bind"]("selectstart",drag.dontstart).css("MozUserSelect",bool?"":"none"),document.unselectable=bool?"off":"on"},dontstart:function(){return!1},callback:function(){}};drag.callback.prototype={update:function(){$special.drop&&this.available.length&&$.each(this.available,function(i){$special.drop.locate(this,i)})}};var $dispatch=$event.dispatch;$event.dispatch=function(event){return $.data(this,"suppress."+event.type)-(new Date).getTime()>0?void $.removeData(this,"suppress."+event.type):$dispatch.apply(this,arguments)};var touchHooks=$event.fixHooks.touchstart=$event.fixHooks.touchmove=$event.fixHooks.touchend=$event.fixHooks.touchcancel={props:"clientX clientY pageX pageY screenX screenY".split(" "),filter:function(event,orig){if(orig){var touched=orig.touches&&orig.touches[0]||orig.changedTouches&&orig.changedTouches[0]||null;touched&&$.each(touchHooks.props,function(i,prop){event[prop]=touched[prop]})}return event}};$special.draginit=$special.dragstart=$special.dragend=drag}(jQuery),function($){var $event=$.event,drag=$event.special.drag,origadd=drag.add,origteardown=drag.teardown;drag.noBubble=!1,drag.livekey="livedrag",drag.add=function(obj){origadd.apply(this,arguments);var data=$.data(this,drag.datakey);!data.live&&obj.selector&&(data.live=!0,$event.add(this,"draginit."+drag.livekey,drag.delegate))},drag.teardown=function(){origteardown.apply(this,arguments);var data=$.data(this,drag.datakey)||{};data.live&&($event.remove(this,"draginit."+drag.livekey,drag.delegate),data.live=!1)},drag.delegate=function(event){var target,elems=[],events=$.data(this,"events")||{};return $.each(events||[],function(key,arr){0===key.indexOf("drag")&&$.each(arr||[],function(i,obj){target=$(event.target).closest(obj.selector,event.currentTarget)[0],target&&($event.add(target,obj.origType+"."+drag.livekey,obj.origHandler||obj.handler,obj.data),$.inArray(target,elems)<0&&elems.push(target))})}),elems.length?$(elems).bind("dragend."+drag.livekey,function(){$event.remove(this,"."+drag.livekey)}):!1}}(jQuery),function(){"use strict";angular.module("ml.analyticsDashboard").service("ReportService",["$http","$q","MLRest",function($http,$q,mlRest){var dashboardOptions=null,store={},storage={getItem:function(key){return store[key]},setItem:function(key,value){store[key]=value},removeItem:function(key){delete store[key]}};this.getStorage=function(){return storage},this.setDashboardOptions=function(options){dashboardOptions=options},this.getDashboardOptions=function(){return dashboardOptions},this.getReports=function(){var search={search:{options:{"search-option":["unfiltered"]},query:{queries:[{"collection-query":{uri:["ml-analytics-dashboard-reports"]}}]}}};return mlRest.search({pageLength:20,category:"content",format:"json"},search)},this.getReport=function(uri){return mlRest.getDocument(uri,{format:"json"})},this.createReport=function(report){return mlRest.createDocument(report,{directory:"/ml-analytics-dashboard-reports/",collection:["ml-analytics-dashboard-reports"],format:"json",extension:".json"})},this.deleteReport=function(uri){return mlRest.deleteDocument(uri)},this.updateReport=function(data){return mlRest.updateDocument(data,{uri:data.uri})},this.get=function(url){return $http.get(url)},this.post=function(url,data){return $http.post(url,data)},this.put=function(url,data){return $http.put(url,data)},this["delete"]=function(url){return $http["delete"](url)}}]),angular.module("ml.analyticsDashboard").factory("WidgetDefinitions",["SmartGridDataModel",function(SmartGridDataModel){return[{name:"Chart Builder",directive:"ml-smart-grid",title:"Chart Builder",icon:"fa fa-th",dataAttrName:"grid",dataModelType:SmartGridDataModel,dataModelOptions:{database:"",groupingStrategy:"",directory:"",query:{},dimensions:[],chart:"column",pageLength:10,parameters:[]},style:{width:"100%"},settingsModalOptions:{templateUrl:"/templates/widgets/qb-settings.html",backdrop:!1},onSettingsClose:function(result,widget){widget.title=result.title,widget.dataModelOptions.pageLength=result.dataModelOptions.pageLength,widget.dataModelOptions.chart=result.dataModelOptions.chart,angular.copy(result.dataModelOptions.parameters,widget.dataModelOptions.parameters)},onSettingsDismiss:function(reason,scope){}}]}])}();