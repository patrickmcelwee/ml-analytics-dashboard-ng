!function(){"use strict";angular.module("ml.analyticsDashboard",["highcharts-ng","ml.analyticsDashboard.report","ml.common","ngAnimate","ui.dashboard"])}(),function(){"use strict";angular.module("ml.analyticsDashboard.chart",[])}(),function(){"use strict";angular.module("ml-dimension-builder",[])}(),function(){"use strict";angular.module("ml.analyticsDashboard.report",["ml-dimension-builder","ml-sq-builder","ml.analyticsDashboard.chart"])}(),function(){"use strict";angular.module("ml-sq-builder",["RecursionHelper"])}(),function(){"use strict";function indexServiceFactory(){function highLevelType(index){var type=index["scalar-type"];switch(type){case"string":case"anyURI":return"string";case"int":case"unsignedInt":case"long":case"unsignedLong":case"float":case"double":case"decimal":return"numeric";case"dateTime":case"time":case"date":case"gMonthYear":case"gYear":case"gMonth":case"gDay":case"yearMonthDuration":case"dayTimeDuration":return"date";case"point":case"long-lat-point":return"geo";default:return type}}function shortName(index){return index.localname||index["path-expression"]}return{highLevelType:highLevelType,shortName:shortName}}angular.module("ml.analyticsDashboard").factory("mlAnalyticsIndexService",indexServiceFactory)}(),function(){"use strict";angular.module("ml.analyticsDashboard.report").factory("SmartGridDataModel",["WidgetDataModel","$http",function(WidgetDataModel,$http){function SmartGridDataModel(){}return SmartGridDataModel.prototype=Object.create(WidgetDataModel.prototype),SmartGridDataModel.prototype.init=function(){WidgetDataModel.prototype.init.call(this),this.load()},SmartGridDataModel.prototype.load=function(){},SmartGridDataModel}])}(),function(){"use strict";angular.module("ml-sq-builder").factory("groupClassHelper",function(){return function(level){var levels=["list-group-item-info","list-group-item-success","list-group-item-warning","list-group-item-danger"];return levels[level%levels.length]}})}(),function(){"use strict";function sqBuilderService(indexService){function getConstraintName(query){return query["json-property"]?query["json-property"]:query.attribute?query.attribute.name:query.element?query.element.name:query.field?query.field.name:query["path-index"]?query["path-index"].text:void 0}function findField(fields,query){return _.find(fields,function(field){return indexService.shortName(field)===getConstraintName(query)})}function getFilterTemplate(type){var templates={group:{type:"group",subType:"",rules:[]},value:{field:"",subType:"",value:""},word:{field:"",subType:"",value:""},range:{field:"",subType:"",operator:"",value:null}};return angular.copy(templates[type])}function parseQueryGroup(fields,group){var typeMap={"or-query":"group","and-query":"group","value-query":"value","word-query":"word","range-query":"range"},key=Object.keys(group)[0],query=group[key],type=typeMap[key],obj=getFilterTemplate(type);switch(key){case"or-query":case"and-query":obj.rules=group[key].queries.map(parseQueryGroup.bind(group,fields)),obj.subType=key;break;case"value-query":case"word-query":obj.subType=key,obj.field=findField(fields,query),"boolean"===obj.field["scalar-type"]?obj.value=query.text?1:0:obj.value=query.text;break;case"range-query":obj.field=findField(fields,query),obj.value=query.value,query["path-index"]?obj.subType="value-query":(obj.subType=query["range-operator"],obj.operator=obj.subType);break;default:throw new Error("unexpected query")}return obj}function setConstraint(value,field){var claz=field["ref-type"];"json-property-reference"===claz?value[claz]=field.localname:"element-reference"===claz||"attribute-reference"===claz?(value[claz.split("-")[0]]={name:field.localname,ns:field["namespace-uri"]},"attribute-reference"===claz&&(value.element={name:field["parent-localname"],ns:field["parent-namespace-uri"]})):"field"===claz&&(value[claz]={name:field.localname,collation:fieldData.collation})}function parseFilterGroup(fields,group){var obj={};if("group"===group.type){obj[group.subType]=group.rules.map(parseFilterGroup.bind(group,fields)).filter(function(item){return!!item});var key=Object.keys(obj)[0],queries={queries:obj[key]},queryObj={};return queryObj[key]=queries,queryObj}group.field;if(group.field){switch(group.field["scalar-type"]){case"string":if("path-reference"===group.field["ref-type"]){var dataType="xs:"+group.field["scalar-type"];obj["range-query"]={"path-index":{text:group.field["path-expression"],namespaces:{}},collation:group.field.collation,type:dataType,"range-operator":"EQ",value:group.value}}else{group.subType||(group.subType="value-query");var value={text:group.value};setConstraint(value,group.field),obj[group.subType]=value}break;case"int":case"long":case"decimal":group.subType||(group.subType="EQ");var dataType="xs:"+group.field["scalar-type"],value={type:dataType,"range-operator":group.subType,value:group.value};setConstraint(value,group.field),"path-reference"===group.field["ref-type"]&&(value["path-index"]={text:group.field["path-expression"],namespaces:{}}),obj["range-query"]=value;break;case"boolean":void 0===group.value&&(group.value=1);var value={text:!!group.value};"json-property"===fieldData.classification&&(value.type="boolean"),setConstraint(value,group.field),obj["value-query"]=value;break;case"date":break;default:throw new Error("unexpected field type")}return obj}}function toFilters(query,fields){var filters=query.map(parseQueryGroup.bind(query,fields));return filters}function toQuery(filters,fields){var query=filters.map(parseFilterGroup.bind(filters,fields)).filter(function(item){return!!item});return query}return{toFilters:toFilters,toQuery:toQuery}}angular.module("ml-sq-builder").factory("sqBuilderService",sqBuilderService),sqBuilderService.$inject=["mlAnalyticsIndexService"]}(),function(){"use strict";angular.module("ml.analyticsDashboard").service("ReportService",["$http","MLRest",function($http,mlRest){var dashboardOptions=null,store={},storage={getItem:function(key){return store[key]},setItem:function(key,value){store[key]=value},removeItem:function(key){delete store[key]}};this.getStorage=function(){return storage},this.setDashboardOptions=function(options){dashboardOptions=options},this.getDashboardOptions=function(){return dashboardOptions},this.loadWidgets=function(widgets){dashboardOptions.loadWidgets(widgets)},this.getReports=function(){var search={search:{options:{"search-option":["unfiltered"],"extract-document-data":{"extract-path":["/name"]}},query:{queries:[{"collection-query":{uri:["ml-analytics-dashboard-reports"]}}]}}};return mlRest.search({pageLength:20,format:"json"},search)},this.getReport=function(uri){return mlRest.getDocument(uri,{format:"json"})},this.createReport=function(report){return mlRest.updateDocument(report,{collection:["ml-analytics-dashboard-reports"],uri:report.uri})},this.deleteReport=function(uri){return mlRest.deleteDocument(uri)},this.updateReport=function(data){return mlRest.updateDocument(data,{uri:data.uri})},this.get=function(url){return $http.get(url)},this.post=function(url,data){return $http.post(url,data)},this.put=function(url,data){return $http.put(url,data)},this["delete"]=function(url){return $http["delete"](url)}}]),angular.module("ml.analyticsDashboard").factory("WidgetDefinitions",["SmartGridDataModel",function(SmartGridDataModel){return[{name:"Chart Builder",directive:"ml-smart-grid",title:"Chart Builder",icon:"fa fa-th",dataAttrName:"grid",dataModelType:SmartGridDataModel,dataModelOptions:{},style:{width:"100%"}}]}])}(),function(){"use strict";function mlAnalyticsChart(){return{restrict:"E",templateUrl:"/ml-analytics-chart/chart.html",scope:{analyticsConfig:"="},controller:"mlAnalyticsChartCtrl"}}angular.module("ml.analyticsDashboard.chart").directive("mlAnalyticsChart",mlAnalyticsChart)}(),function(){"use strict";function mlAnalyticsDashboard(){return{restrict:"E",templateUrl:"/templates/dashboard.html",controller:"DashboardCtrl"}}angular.module("ml.analyticsDashboard").directive("mlAnalyticsDashboard",mlAnalyticsDashboard)}(),function(){"use strict";angular.module("ml-dimension-builder").directive("dimensionBuilder",["mlAnalyticsIndexService",function(indexService){return{scope:{data:"=dimensionBuilder"},templateUrl:"/ml-dimension-builder/BuilderDirective.html",link:function(scope){var aggregates={"by-type":{"float":["variance","max","covariance-population","stddev","covariance","stddev-population","median","sum","min","count","avg","correlation","variance-population"],unsignedInt:["variance","max","covariance-population","stddev","covariance","stddev-population","median","sum","min","count","avg","correlation","variance-population"],"int":["variance","max","covariance-population","stddev","covariance","stddev-population","median","sum","min","count","avg","correlation","variance-population"],dateTime:["max","min","count"],gYear:["max","min","count"],gMonth:["max","min","count"],yearMonthDuration:["max","sum","min","count","avg"],decimal:["variance","max","covariance-population","stddev","covariance","stddev-population","median","sum","min","count","avg","correlation","variance-population"],anyURI:["count"],dayTimeDuration:["max","sum","min","count","avg"],date:["max","min","count"],"double":["variance","max","covariance-population","stddev","covariance","stddev-population","median","sum","min","count","avg","correlation","variance-population"],string:["count"],gYearMonth:["max","min","count"],time:["max","min","count"],point:["max","min","count"],unsignedLong:["variance","max","covariance-population","stddev","covariance","stddev-population","median","sum","min","count","avg","correlation","variance-population"],"long":["variance","max","covariance-population","stddev","covariance","stddev-population","median","sum","min","count","avg","correlation","variance-population"],gDay:["max","min","count"]},info:{"variance-population":{"reference-arity":1},correlation:{"reference-arity":2},avg:{"reference-arity":1},count:{"reference-arity":1},min:{"reference-arity":1},sum:{"reference-arity":1},median:{"reference-arity":1},"stddev-population":{"reference-arity":1},covariance:{"reference-arity":2},stddev:{"reference-arity":1},"covariance-population":{"reference-arity":2},max:{"reference-arity":1},variance:{"reference-arity":1}}};scope.indexService=indexService,scope.isColumnField=function(field){return _.includes(["string"],indexService.highLevelType(field))},scope.isComputeField=function(field){return"numeric"===indexService.highLevelType(field)},scope.shortName=indexService.shortName,scope.addColumn=function(field){scope.data.serializedQuery.columns.push(field)},scope.availableFns=function(field){return aggregates["by-type"][field["scalar-type"]].filter(function(fn){return 1===aggregates.info[fn]["reference-arity"]})},scope.addCompute=function(field,operation){scope.data.serializedQuery.computes.push({fn:operation,ref:field})}}}}])}(),function(){"use strict";function mlAnalyticsViewChart(){return{restrict:"E",templateUrl:"/templates/ml-report/ml-analytics-view-chart.html",controller:"mlAnalyticsViewChartCtrl"}}angular.module("ml.analyticsDashboard.report").directive("mlAnalyticsViewChart",mlAnalyticsViewChart)}(),function(){"use strict";function mlResultsGrid(){return{restrict:"E",templateUrl:"/templates/ml-report/ml-results-grid.html",scope:{resultsObject:"=",queryError:"="},controller:"mlResultsGridCtrl"}}angular.module("ml.analyticsDashboard.report").directive("mlResultsGrid",mlResultsGrid)}(),function(){"use strict";function mlSmartGrid(){return{restrict:"A",replace:!1,templateUrl:"/templates/ml-report/chart-builder.html",controller:"mlSmartGridCtrl",link:function($scope,element,attrs){$scope.element=element,$scope.$watch("widget.mode",function(mode){$scope.data.needsUpdate=!0})}}}angular.module("ml.analyticsDashboard.report").directive("mlSmartGrid",mlSmartGrid)}(),function(){"use strict";angular.module("ml-sq-builder").directive("sqBuilderChooser",["RecursionHelper","groupClassHelper",function(RH,groupClassHelper){return{scope:{sqFields:"=",item:"=sqBuilderChooser",onRemove:"&"},templateUrl:"/ml-sq-builder/ChooserDirective.html",compile:function(element){return RH.compile(element,function(scope,el,attrs){var depth=scope.depth=+attrs.depth,item=scope.item;scope.getGroupClassName=function(){var level=depth;return"group"===item.type&&level++,groupClassHelper(level)}})}}}])}(),function(){"use strict";angular.module("ml-sq-builder").directive("sqBuilderGroup",["RecursionHelper","groupClassHelper",function(RH,groupClassHelper){return{scope:{sqFields:"=",group:"=sqBuilderGroup",onRemove:"&"},templateUrl:"/ml-sq-builder/GroupDirective.html",compile:function(element){return RH.compile(element,function(scope,el,attrs){var depth=scope.depth=+attrs.depth,group=scope.group;scope.addRule=function(){group.rules.push({})},scope.addGroup=function(){group.rules.push({type:"group",subType:"and-query",rules:[]})},scope.removeChild=function(idx){group.rules.splice(idx,1)},scope.getGroupClassName=function(){return groupClassHelper(depth+1)}})}}}])}(),function(){"use strict";angular.module("ml-sq-builder").directive("sqBuilderRule",["mlAnalyticsIndexService",function(indexService){return{scope:{sqFields:"=",rule:"=sqBuilderRule",onRemove:"&"},templateUrl:"/ml-sq-builder/RuleDirective.html",link:function(scope){scope.shortName=indexService.shortName,scope.isQueryableIndex=function(field){return _.includes(["string","numeric"],indexService.highLevelType(field))}}}}])}(),function(){"use strict";angular.module("ml-sq-builder").directive("sqBuilder",["sqBuilderService",function(sqBuilderService){return{scope:{data:"=sqBuilder"},templateUrl:"/ml-sq-builder/BuilderDirective.html",link:function(scope){var data=scope.data;scope.filters=[],scope.removeChild=function(idx){scope.filters.splice(idx,1)},scope.addRule=function(){scope.filters.push({})},scope.addGroup=function(){scope.filters.push({type:"group",subType:"and-query",rules:[]})},scope.$watch("data.needsUpdate",function(curr){curr&&(scope.filters=sqBuilderService.toFilters(data.query,scope.data.fields),scope.data.needsUpdate=!1)}),scope.$watch("filters",function(newValue,oldValue){angular.equals(newValue,oldValue)||(scope.data.query.length=0,angular.extend(scope.data.query,sqBuilderService.toQuery(scope.filters,scope.data.fields)))},!0)}}}])}(),function(){"use strict";angular.module("ml-sq-builder").directive("sqType",[function(){return{scope:{type:"=sqType",rule:"=",guide:"="},template:'<ng-include src="getTemplateUrl()" />',link:function(scope){scope.getTemplateUrl=function(){var type=scope.type;if(type)return type=type.charAt(0).toUpperCase()+type.slice(1),"/ml-sq-builder/types/"+type+".html"},scope.booleans=["False","True"],scope.booleansOrder=["True","False"],scope.inputNeeded=function(){var needs=["value-query","word-query","EQ","NE","GT","GE","LT","LE"];return~needs.indexOf(scope.rule.subType)}}}}])}(),function(){"use strict";function mlAnalyticsDesign(){return{restrict:"E",templateUrl:"/templates/designer.html",controller:"ReportDesignerCtrl"}}angular.module("ml.analyticsDashboard").directive("mlAnalyticsDesign",mlAnalyticsDesign)}(),function(){"use strict";function mlAnalyticsDashboardHome(){return{restrict:"E",templateUrl:"/templates/home.html"}}angular.module("ml.analyticsDashboard").directive("mlAnalyticsDashboardHome",mlAnalyticsDashboardHome)}(),function(){"use strict";function manageMlAnalyticsDashboard(){return{restrict:"E",templateUrl:"/templates/manage.html",controller:"ManageCtrl"}}angular.module("ml.analyticsDashboard").directive("manageMlAnalyticsDashboard",manageMlAnalyticsDashboard)}(),function(){"use strict";function mlAnalyticsReportEditor(){return{restrict:"E",templateUrl:"/templates/editor.html",controller:"ReportEditorCtrl"}}angular.module("ml.analyticsDashboard").directive("mlAnalyticsReportEditor",mlAnalyticsReportEditor)}(),function(){"use strict";function mlAnalyticsNewReport(){return{restrict:"E",templateUrl:"/templates/new-report.html",controller:"NewReportCtrl"}}angular.module("ml.analyticsDashboard").directive("mlAnalyticsNewReport",mlAnalyticsNewReport)}(),function(){"use strict";function HomeCtrl(){}angular.module("ml.analyticsDashboard").controller("HomeCtrl",HomeCtrl),HomeCtrl.$inject=[]}(),function(){"use strict";function mlAnalyticsChartCtrl($scope,$http,$q){$scope.isGridCollapsed=!0,$scope.shouldShowChart=!1,$scope.shouldShowGrid=!1,$scope.queryState={queryError:null,configError:null,results:null,loadingResults:!1};var clearResults=function(){$scope.queryState.results={}},executeComplexQuery=function(columnCount){var params={};$scope.queryState.loadingResults=!0,clearResults(),$scope.deferredAbort=$q.defer(),$http({method:"POST",url:"/v1/resources/group-by",params:params,data:$scope.analyticsConfig.serializedQuery,timeout:$scope.deferredAbort.promise}).then(function(response){$scope.queryState.results=response.data,$scope.queryState.queryError=null,$scope.queryState.loadingResults=!1,createHighcharts(columnCount,$scope.queryState.results.headers,$scope.queryState.results.results)},function(response){$scope.queryState.loadingResults=!1,0!==response.status&&($scope.queryState.queryError={title:response.statusText,description:response.data})})};$scope.execute=function(){if($scope.analyticsConfig.serializedQuery){var columns=$scope.analyticsConfig.serializedQuery.columns,computes=$scope.analyticsConfig.serializedQuery.computes;columns.length+computes.length>0?($scope.queryState.loadingResults=!0,executeComplexQuery(columns.length)):clearResults()}};var createColumnHighcharts=function(columnCount,headers,results){var i,categories=[],series=[];for(i=columnCount;i<headers.length;i++)series.push({name:headers[i],data:[]});results.forEach(function(row){for(var groups=[],i=0;columnCount>i;i++)groups.push(row[i]);for(categories.push(groups.join(",")),i=columnCount;i<row.length;i++)series[i-columnCount].data.push(row[i])}),$scope.highchartConfig={options:{chart:{type:"column"},tooltip:{shared:!0,useHTML:!0,borderWidth:1,borderRadius:10,headerFormat:'<span style="font-size:16px">{point.key}</span><table>',pointFormat:'<tr><td style="color:{series.color};padding:0">{series.name}: </td><td style="padding:0"><b>{point.y:.1f}</b></td></tr>',footerFormat:"</table>"},plotOptions:{column:{pointPadding:.2,borderWidth:0}}},title:{text:""},xAxis:{categories:categories},yAxis:{title:{text:""}},series:series}},createPieHighcharts=function(columnCount,headers,results){for(var measures=[],series=[],i=columnCount;i<headers.length;i++)series.push({name:headers[i],data:[]}),measures.push(headers[i]);var rings=series.length;if(rings>1){var percent=Math.floor(100/rings),ring=0;for(series[ring].size=percent+"%",ring=1;rings>ring;ring++)series[ring].innerSize=percent*ring+"%",series[ring].size=percent*(ring+1)+"%"}results.forEach(function(row){for(var groups=[],i=0;columnCount>i;i++)groups.push(row[i]);var category=groups.join(",");for(i=columnCount;i<row.length;i++)series[i-columnCount].data.push({name:category,y:row[i]})});var title="Measures: "+measures;$scope.highchartConfig={options:{chart:{type:"pie"},tooltip:{shared:!0,useHTML:!0,borderWidth:1,borderRadius:10,headerFormat:'<span style="font-size:16px">{point.key}</span><table>',pointFormat:'<tr><td style="color:{series.color};padding:0">{series.name}: </td><td style="padding:0"><b>{point.y:.1f}</b></td></tr>',footerFormat:"</table>"},plotOptions:{pie:{showInLegend:!0,shadow:!1,center:["50%","50%"],dataLabels:{enabled:!0,useHTML:!1,format:"<b>{point.name} {series.name}</b>: {point.percentage:.1f}%",style:{color:Highcharts.theme&&Highcharts.theme.contrastTextColor||"black"}}}}},credits:{enabled:!1},title:{text:title},yAxis:{title:{text:""}},series:series}},createHighcharts=function(columnCount,headers,results){switch(results[0]&&results[0].length===columnCount?($scope.shouldShowChart=!1,$scope.shouldShowGrid=!0,$scope.isGridCollapsed=!1):($scope.shouldShowChart=!0,$scope.shouldShowGrid=!0,$scope.isGridCollapsed=!0),$scope.analyticsConfig.chartType){case"column":createColumnHighcharts(columnCount,headers,results);break;case"pie":createPieHighcharts(columnCount,headers,results);break;default:createColumnHighcharts(columnCount,headers,results)}};$scope.$watch("analyticsConfig",function(){$scope.execute()},!0)}angular.module("ml.analyticsDashboard.chart").controller("mlAnalyticsChartCtrl",mlAnalyticsChartCtrl),mlAnalyticsChartCtrl.$inject=["$scope","$http","$q"]}(),function(){"use strict";function DashboardCtrl($scope,$location){function establishMode(){$location.search()["ml-analytics-mode"]?$scope.mode=$location.search()["ml-analytics-mode"]:$location.search("ml-analytics-mode","home")}establishMode()}angular.module("ml.analyticsDashboard").controller("DashboardCtrl",DashboardCtrl),DashboardCtrl.$inject=["$scope","$location"]}(),function(){"use strict";function mlAnalyticsViewChartCtrl($scope){}angular.module("ml.analyticsDashboard.report").controller("mlAnalyticsViewChartCtrl",mlAnalyticsViewChartCtrl)}(),function(){"use strict";function mlResultsGridCtrl($scope){$scope.pageLength="10",$scope.sortColumn=0,$scope.sortReverse=!1,$scope.gridPage=1,$scope.sorter=function(item){return item[$scope.sortColumn]},$scope.setSortColumn=function(column){column===$scope.sortColumn?$scope.sortReverse=!$scope.sortReverse:$scope.sortColumn=column}}angular.module("ml.analyticsDashboard.report").controller("mlResultsGridCtrl",mlResultsGridCtrl),mlResultsGridCtrl.$inject=["$scope"]}(),function(){"use strict";function mlSmartGridCtrl($scope,$http,indexService){$scope.widget.mode="Design",$scope.model={loadingResults:!1},$scope.deferredAbort=null,$scope.initializeQuery=function(){$scope.data.metaConstraint={},"collection"===$scope.data.groupingStrategy&&$scope.data.directory&&($scope.data.metaConstraint={"collection-query":{uri:[$scope.data.directory]}}),$scope.data.operation="and-query",$scope.data.rootQuery={},$scope.data.rootQuery[$scope.data.operation]={queries:$scope.data.query},$scope.data.serializedQuery={"result-type":"group-by",columns:[],computes:[],options:["headers=true"],query:{query:{queries:[$scope.data.metaConstraint,$scope.data.rootQuery],qtext:""}}}},$scope.widget.dataModelOptions.data?($scope.data=angular.copy($scope.widget.dataModelOptions.data),$scope.data.rootQuery[$scope.data.operation]={queries:$scope.data.query},$scope.data.serializedQuery.query.query.queries=[$scope.data.metaConstraint,$scope.data.rootQuery]):($scope.data={groupingStrategy:"collection",chartType:"column",query:[],needsUpdate:!0,originalDocs:[]},$scope.initializeQuery()),$scope.executor={},$scope.dataManager={removeCompute:function(index){$scope.data.serializedQuery.computes.splice(index,1)},removeColumn:function(index){$scope.data.serializedQuery.columns.splice(index,1)}},$scope.renderGroupByConfig=function(){return angular.toJson($scope.data.serializedQuery,!0)},$scope.showGroupByConfig=function(){$scope.groupByConfigIsHidden=!1},$scope.hideGroupByConfig=function(){$scope.groupByConfigIsHidden=!0},$scope.hideGroupByConfig(),$scope.shortName=indexService.shortName,$scope.getDbConfig=function(){var params={"rs:strategy":$scope.data.groupingStrategy};$scope.model.loadingConfig=!0,$scope.data.targetDatabase&&(params["rs:database"]=$scope.data.targetDatabase),$http.get("/v1/resources/index-discovery",{params:params}).then(function(response){if($scope.model.loadingConfig=!1,response.data.errorResponse)return void($scope.model.configError=response.data.errorResponse.message);if($scope.data.targetDatabase=response.data["current-database"],$scope.data.databases=response.data.databases,_.isEmpty(response.data.docs))$scope.model.configError="No documents with range indices in the database";else{$scope.model.configError=null;var docs=response.data.docs;$scope.data.originalDocs=docs,$scope.data.directories=Object.keys(docs),_.includes($scope.data.directories,$scope.data.directory)||($scope.data.directory=void 0,$scope.initializeQuery()),$scope.data.fields=docs[$scope.data.directory],$scope.data.fields&&$scope.setDocument()}},function(response){$scope.model.loadingConfig=!1,$scope.model.configError=response.data})},$scope.setDocument=function(){$scope.data.needsUpdate=!0},$scope.save=function(){$scope.widget.dataModelOptions.data=angular.copy($scope.data),$scope.options.saveDashboard()},$scope.$watch("data.directory",function(){$scope.data.fields=$scope.data.originalDocs[$scope.data.directory]}),$scope.$watch("data.operation",function(newOperation,oldOperation){newOperation!==oldOperation&&(delete $scope.data.rootQuery[oldOperation],$scope.data.rootQuery[newOperation]={queries:$scope.data.query})}),$scope.getDbConfig()}angular.module("ml.analyticsDashboard.report").controller("mlSmartGridCtrl",mlSmartGridCtrl),mlSmartGridCtrl.$inject=["$scope","$http","mlAnalyticsIndexService"]}(),function(){"use strict";angular.module("ml.analyticsDashboard").controller("ReportDesignerCtrl",["$scope","$location","ReportService","WidgetDefinitions",function($scope,$location,ReportService,WidgetDefinitions){function initWithData(){createDefaultWidgets(),ReportService.loadWidgets(defaultWidgets)}function createDefaultWidgets(){defaultWidgets=$scope.report.widgets?_.map($scope.report.widgets,function(widget){return{name:widget.name,title:widget.title,attrs:widget.attrs,style:widget.size,dataModelOptions:widget.dataModelOptions}}):[]}$scope.report={},$scope.report.uri=$location.search()["ml-analytics-uri"];var defaultWidgets;createDefaultWidgets();var store={},storage={getItem:function(key){return store[key]},setItem:function(key,value){store[key]=value,$scope.report.widgets=value.widgets,$scope.saveWidgets()},removeItem:function(key){delete store[key]}};$scope.reportDashboardOptions={widgetButtons:!0,widgetDefinitions:WidgetDefinitions,defaultWidgets:defaultWidgets,hideToolbar:!1,hideWidgetName:!0,explicitSave:!1,stringifyStorage:!1,storage:storage,storageId:$scope.report.uri},ReportService.setDashboardOptions($scope.reportDashboardOptions),ReportService.getReport($scope.report.uri).then(function(resp){angular.extend($scope.report,resp.data),initWithData()}),$scope.returnHome=function(){$location.search("ml-analytics-mode","home"),$location.search("ml-analytics-uri",null)},$scope.$on("widgetAdded",function(event,widget){event.stopPropagation()}),$scope.saveWidgets=function(){ReportService.updateReport($scope.report)}}])}(),function(){"use strict";function ManageCtrl($scope,$location,$window,userService,ReportService,WidgetDefinitions){function establishMode(){$location.search()["ml-analytics-mode"]?$scope.mode=$location.search()["ml-analytics-mode"]:$location.search("ml-analytics-mode","home")}$scope.currentUser=null,$scope.search={},$scope.showLoading=!1,$scope.widgetDefs=WidgetDefinitions,$scope.reports=[],establishMode(),$scope.report={},$scope.addWidget=function(widgetDef){ReportService.getDashboardOptions($scope.reportDashboardOptions).addWidget({name:widgetDef.name})},$scope.deleteReport=function(report){$window.confirm("This action will delete this report permanently. Are you sure you want to delete it?")&&ReportService.deleteReport(report.uri).then(function(response){for(var i=0;i<$scope.reports.length;i++)if(report.uri===$scope.reports[i].uri){$scope.reports.splice(i,1);break}},function(response){$window.alert(response)})},$scope.newReportForm=function(){$location.search("ml-analytics-mode","new")},$scope.gotoDesigner=function(uri){$location.search("ml-analytics-mode","design"),$location.search("ml-analytics-uri",uri)},$scope.showReportEditor=function(report){$scope.report.uri=report.uri,$location.search("ml-analytics-mode","edit"),$location.search("ml-analytics-uri",$scope.report.uri)},$scope.getReports=function(){$scope.showLoading=!0,ReportService.getReports().then(function(response){$scope.reports=response.data.results,_.each($scope.reports,function(report){report.name=report.extracted.content[0].name}),$scope.showLoading=!1},function(){$scope.showLoading=!1})},$scope.$watch(userService.currentUser,function(newValue){$scope.currentUser=newValue,$scope.getReports()}),$scope.$on("$locationChangeSuccess",function(latest,old){establishMode()}),$scope.$on("mlAnalyticsDashboard:ReportCreated",function(event,report){$scope.reports.push(report)})}angular.module("ml.analyticsDashboard").controller("ManageCtrl",ManageCtrl),ManageCtrl.$inject=["$scope","$location","$window","userService","ReportService","WidgetDefinitions"]}(),function(){"use strict";angular.module("ml.analyticsDashboard").controller("NewReportCtrl",["$scope","$location","$rootScope","ReportService",function($scope,$location,$rootScope,ReportService){$scope.report={},$scope.createReport=function(){$scope.report.uri="/ml-analytics-dashboard-reports/"+encodeURIComponent($scope.report.name)+"-"+Math.floor(1e6*Math.random()+1)+".json",ReportService.createReport($scope.report).then(function(response){$rootScope.$broadcast("mlAnalyticsDashboard:ReportCreated",$scope.report),$location.search("ml-analytics-mode","design"),$location.search("ml-analytics-uri",$scope.report.uri)})}}])}(),function(){"use strict";angular.module("ml.analyticsDashboard").controller("ReportEditorCtrl",["$scope","$location","ReportService",function($scope,$location,ReportService){$scope.report={},$scope.report.uri=$location.search()["ml-analytics-uri"],ReportService.getReport($scope.report.uri).then(function(response){angular.extend($scope.report,response.data)}),$scope.updateReport=function(){ReportService.updateReport($scope.report).then(function(response){$location.search("ml-analytics-mode","home")})}}])}();