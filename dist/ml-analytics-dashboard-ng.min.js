!function(){"use strict";angular.module("ml.analyticsDashboard",["highcharts-ng","ml.analyticsDashboard.report","ml.common","ui.dashboard"])}(),function(){"use strict";angular.module("ml-dimension-builder",[])}(),function(){"use strict";angular.module("ml.analyticsDashboard.report",["ml-dimension-builder","ml-sq-builder"])}(),function(){"use strict";angular.module("ml-sq-builder",["RecursionHelper"])}(),function(){"use strict";angular.module("ml.analyticsDashboard.report").factory("SmartGridDataModel",["WidgetDataModel","$http",function(WidgetDataModel,$http){function SmartGridDataModel(){}return SmartGridDataModel.prototype=Object.create(WidgetDataModel.prototype),SmartGridDataModel.prototype.init=function(){WidgetDataModel.prototype.init.call(this),this.load()},SmartGridDataModel.prototype.load=function(){},SmartGridDataModel}])}(),function(){"use strict";angular.module("ml-sq-builder").factory("groupClassHelper",function(){return function(level){var levels=["list-group-item-info","list-group-item-success","list-group-item-warning","list-group-item-danger"];return levels[level%levels.length]}})}(),function(){"use strict";function toFilters(query,fieldMap){var filters=query.map(parseQueryGroup.bind(query,fieldMap));return filters}function toQuery(filters,fieldMap){var query=filters.map(parseFilterGroup.bind(filters,fieldMap)).filter(function(item){return!!item});return query}function parseQueryGroup(fieldMap,group){var typeMap={"or-query":"group","and-query":"group","value-query":"value","word-query":"word","range-query":"range"},key=Object.keys(group)[0],query=group[key],type=typeMap[key],obj=getFilterTemplate(type);switch(key){case"or-query":case"and-query":obj.rules=group[key].queries.map(parseQueryGroup.bind(group,fieldMap)),obj.subType=key;break;case"value-query":obj.field=getConstraintName(query),obj.subType=key;var fieldData=fieldMap[obj.field];"boolean"===fieldData.type?obj.value=query.text?1:0:obj.value=query.text;break;case"word-query":obj.field=getConstraintName(query),obj.subType=key,obj.value=query.text;break;case"range-query":query["path-index"]?(obj.field=getConstraintName(query),obj.subType="value-query",obj.value=query.value):(obj.field=getConstraintName(query),obj.subType=query["range-operator"],obj.operator=obj.subType,obj.value=query.value);break;default:throw new Error("unexpected query")}return obj}function parseFilterGroup(fieldMap,group){var obj={};if("group"===group.type){obj[group.subType]=group.rules.map(parseFilterGroup.bind(group,fieldMap)).filter(function(item){return!!item});var key=Object.keys(obj)[0],queries={queries:obj[key]},queryObj={};return queryObj[key]=queries,queryObj}var fieldName=group.field,fieldData=fieldMap[fieldName];if(fieldName){switch(fieldData.type){case"string":if("path-expression"===fieldData.classification){var dataType="xs:"+fieldData.type;obj["range-query"]={"path-index":{text:fieldName,namespaces:{}},collation:fieldData.collation,type:dataType,"range-operator":"EQ",value:group.value}}else{group.subType||(group.subType="value-query");var value={text:group.value};setConstraint(value,fieldName,fieldData),obj[group.subType]=value}break;case"int":case"long":case"decimal":group.subType||(group.subType="EQ");var dataType="xs:"+fieldData.type,value={type:dataType,"range-operator":group.subType,value:group.value};setConstraint(value,fieldName,fieldData),"path-expression"===fieldData.classification&&(value["path-index"]={text:fieldName,namespaces:{}}),obj["range-query"]=value;break;case"boolean":void 0===group.value&&(group.value=1);var value={text:!!group.value};"json-property"===fieldData.classification&&(value.type="boolean"),setConstraint(value,fieldName,fieldData),obj["value-query"]=value;break;case"date":break;default:throw new Error("unexpected field type")}return obj}}function getConstraintName(query){return query["json-property"]?query["json-property"]:query.attribute?query.attribute.name:query.element?query.element.name:query.field?query.field.name:query["path-index"]?query["path-index"].text:void 0}function setConstraint(value,fieldName,fieldData){var claz=fieldData.classification;"json-property"===claz?value[claz]=fieldName:"element"===claz||"attribute"===claz?(value[claz]={name:fieldName,ns:fieldData.ns},"attribute"===claz&&(value.element={name:fieldData["parent-localname"],ns:fieldData["parent-namespace-uri"]})):"field"===claz&&(value[claz]={name:fieldName,collation:fieldData.collation})}function getFilterTemplate(type){var templates={group:{type:"group",subType:"",rules:[]},value:{field:"",subType:"",value:""},word:{field:"",subType:"",value:""},range:{field:"",subType:"",operator:"",value:null}};return angular.copy(templates[type])}angular.module("ml-sq-builder").factory("sqBuilderService",[function(){return{toFilters:toFilters,toQuery:toQuery}}])}(),function(){"use strict";angular.module("ml.analyticsDashboard").service("ReportService",["$http","$q","MLRest",function($http,$q,mlRest){var dashboardOptions=null,store={},storage={getItem:function(key){return store[key]},setItem:function(key,value){store[key]=value},removeItem:function(key){delete store[key]}};this.getStorage=function(){return storage},this.setDashboardOptions=function(options){dashboardOptions=options},this.getDashboardOptions=function(){return dashboardOptions},this.loadWidgets=function(widgets){dashboardOptions.loadWidgets(widgets)},this.getReports=function(){var search={search:{options:{"search-option":["unfiltered"],"extract-document-data":{"extract-path":["/name"]}},query:{queries:[{"collection-query":{uri:["ml-analytics-dashboard-reports"]}}]}}};return mlRest.search({pageLength:20,format:"json"},search)},this.getReport=function(uri){return mlRest.getDocument(uri,{format:"json"})},this.createReport=function(report){return mlRest.updateDocument(report,{collection:["ml-analytics-dashboard-reports"],uri:report.uri})},this.deleteReport=function(uri){return mlRest.deleteDocument(uri)},this.updateReport=function(data){return mlRest.updateDocument(data,{uri:data.uri})},this.get=function(url){return $http.get(url)},this.post=function(url,data){return $http.post(url,data)},this.put=function(url,data){return $http.put(url,data)},this["delete"]=function(url){return $http["delete"](url)}}]),angular.module("ml.analyticsDashboard").factory("WidgetDefinitions",["SmartGridDataModel",function(SmartGridDataModel){return[{name:"Chart Builder",directive:"ml-smart-grid",title:"Chart Builder",icon:"fa fa-th",dataAttrName:"grid",dataModelType:SmartGridDataModel,dataModelOptions:{database:"",groupingStrategy:"",directory:"",query:{},chart:"column",pageLength:10},style:{width:"100%"},settingsModalOptions:{templateUrl:"/templates/widgets/qb-settings.html",backdrop:!1},onSettingsClose:function(result,widget){widget.title=result.title,widget.dataModelOptions.pageLength=result.dataModelOptions.pageLength,widget.dataModelOptions.chart=result.dataModelOptions.chart},onSettingsDismiss:function(reason,scope){}}]}])}(),function(){"use strict";function mlAnalyticsDashboard(){return{restrict:"E",templateUrl:"/templates/dashboard.html",controller:"DashboardCtrl"}}angular.module("ml.analyticsDashboard").directive("mlAnalyticsDashboard",mlAnalyticsDashboard)}(),function(){"use strict";angular.module("ml-dimension-builder").directive("dimensionBuilder",[function(){return{scope:{data:"=dimensionBuilder"},templateUrl:"/ml-dimension-builder/BuilderDirective.html",link:function(scope){var aggregates={"by-type":{"float":["variance","max","covariance-population","stddev","covariance","stddev-population","median","sum","min","count","avg","correlation","variance-population"],unsignedInt:["variance","max","covariance-population","stddev","covariance","stddev-population","median","sum","min","count","avg","correlation","variance-population"],"int":["variance","max","covariance-population","stddev","covariance","stddev-population","median","sum","min","count","avg","correlation","variance-population"],dateTime:["max","min","count"],gYear:["max","min","count"],gMonth:["max","min","count"],yearMonthDuration:["max","sum","min","count","avg"],decimal:["variance","max","covariance-population","stddev","covariance","stddev-population","median","sum","min","count","avg","correlation","variance-population"],anyURI:["count"],dayTimeDuration:["max","sum","min","count","avg"],date:["max","min","count"],"double":["variance","max","covariance-population","stddev","covariance","stddev-population","median","sum","min","count","avg","correlation","variance-population"],string:["count"],gYearMonth:["max","min","count"],time:["max","min","count"],point:["max","min","count"],unsignedLong:["variance","max","covariance-population","stddev","covariance","stddev-population","median","sum","min","count","avg","correlation","variance-population"],"long":["variance","max","covariance-population","stddev","covariance","stddev-population","median","sum","min","count","avg","correlation","variance-population"],gDay:["max","min","count"]},info:{"variance-population":{"reference-arity":1},correlation:{"reference-arity":2},avg:{"reference-arity":1},count:{"reference-arity":1},min:{"reference-arity":1},sum:{"reference-arity":1},median:{"reference-arity":1},"stddev-population":{"reference-arity":1},covariance:{"reference-arity":2},stddev:{"reference-arity":1},"covariance-population":{"reference-arity":2},max:{"reference-arity":1},variance:{"reference-arity":1}}};scope.highLevelType=function(type){switch(type){case"int":case"unsignedInt":case"long":case"unsignedLong":case"float":case"double":case"decimal":return"numeric";default:return type}},scope.isColumnField=function(field){return"string"===scope.highLevelType(field["scalar-type"])},scope.isComputeField=function(field){return"numeric"===scope.highLevelType(field["scalar-type"])},scope.shortName=function(field){return field.localname||field["path-expression"]},scope.addColumn=function(field){scope.data.columns.push(field)},scope.availableFns=function(field){return aggregates["by-type"][field["scalar-type"]].filter(function(fn){return 1===aggregates.info[fn]["reference-arity"]})},scope.addCompute=function(field,operation){scope.data.computes.push({fn:operation,ref:field})},scope.renderGroupByConfig=function(){return JSON.stringify({columns:scope.data.columns,computes:scope.data.computes},null,2)},scope.showGroupByConfig=function(){scope.groupByConfigIsHidden=!1},scope.hideGroupByConfig=function(){scope.groupByConfigIsHidden=!0},scope.hideGroupByConfig()}}}])}(),function(){"use strict";function mlAnalyticsViewChart(){return{restrict:"E",templateUrl:"/templates/ml-report/ml-analytics-view-chart.html",controller:"mlAnalyticsViewChartCtrl"}}angular.module("ml.analyticsDashboard.report").directive("mlAnalyticsViewChart",mlAnalyticsViewChart)}(),function(){"use strict";function mlResultsGrid(){return{restrict:"E",templateUrl:"/templates/ml-report/ml-results-grid.html",scope:{resultsObject:"=",queryError:"="},controller:"mlResultsGridCtrl"}}angular.module("ml.analyticsDashboard.report").directive("mlResultsGrid",mlResultsGrid)}(),function(){"use strict";function mlSmartGrid(){return{restrict:"A",replace:!1,templateUrl:"/templates/ml-report/chart-builder.html",controller:"mlSmartGridCtrl",link:function($scope,element,attrs){$scope.element=element,$scope.$watch("widget.mode",function(mode){$scope.data.needsUpdate=!0})}}}angular.module("ml.analyticsDashboard.report").directive("mlSmartGrid",mlSmartGrid)}(),function(){"use strict";angular.module("ml-sq-builder").directive("sqBuilderChooser",["RecursionHelper","groupClassHelper",function(RH,groupClassHelper){return{scope:{sqFields:"=",item:"=sqBuilderChooser",onRemove:"&"},templateUrl:"/ml-sq-builder/ChooserDirective.html",compile:function(element){return RH.compile(element,function(scope,el,attrs){var depth=scope.depth=+attrs.depth,item=scope.item;scope.getGroupClassName=function(){var level=depth;return"group"===item.type&&level++,groupClassHelper(level)}})}}}])}(),function(){"use strict";angular.module("ml-sq-builder").directive("sqBuilderGroup",["RecursionHelper","groupClassHelper",function(RH,groupClassHelper){return{scope:{sqFields:"=",group:"=sqBuilderGroup",onRemove:"&"},templateUrl:"/ml-sq-builder/GroupDirective.html",compile:function(element){return RH.compile(element,function(scope,el,attrs){var depth=scope.depth=+attrs.depth,group=scope.group;scope.addRule=function(){group.rules.push({})},scope.addGroup=function(){group.rules.push({type:"group",subType:"and-query",rules:[]})},scope.removeChild=function(idx){group.rules.splice(idx,1)},scope.getGroupClassName=function(){return groupClassHelper(depth+1)}})}}}])}(),function(){"use strict";angular.module("ml-sq-builder").directive("sqBuilderRule",[function(){return{scope:{sqFields:"=",rule:"=sqBuilderRule",onRemove:"&"},templateUrl:"/ml-sq-builder/RuleDirective.html",link:function(scope){scope.getType=function(){var fields=scope.sqFields,field=scope.rule.field;if(fields&&field)return fields[field].type}}}}])}(),function(){"use strict";angular.module("ml-sq-builder").directive("sqBuilder",["sqBuilderService",function(sqBuilderService){return{scope:{data:"=sqBuilder"},templateUrl:"/ml-sq-builder/BuilderDirective.html",link:function(scope){var data=scope.data;scope.filters=[],scope.removeChild=function(idx){scope.filters.splice(idx,1)},scope.addRule=function(){scope.filters.push({})},scope.addGroup=function(){scope.filters.push({type:"group",subType:"and-query",rules:[]})},"undefined"==typeof scope.data.structuredQuery&&Object.defineProperty(scope.data,"structuredQuery",{get:function(){var rootQuery={};return rootQuery[scope.data.operation]={queries:scope.data.query},{query:{queries:[rootQuery]}}}}),scope.renderStructuredQuery=function(){return JSON.stringify(scope.data.structuredQuery,null,2)},scope.showStructuredQuery=function(){scope.structuredQueryIsHidden=!1},scope.hideStructuredQuery=function(){scope.structuredQueryIsHidden=!0},scope.hideStructuredQuery(),scope.$watch("data.needsUpdate",function(curr){curr&&(scope.filters=sqBuilderService.toFilters(data.query,scope.data.fields),scope.data.needsUpdate=!1)}),scope.$watch("filters",function(curr){curr&&(data.query=sqBuilderService.toQuery(scope.filters,scope.data.fields))},!0)}}}])}(),function(){"use strict";angular.module("ml-sq-builder").directive("sqType",[function(){return{scope:{type:"=sqType",rule:"=",guide:"="},template:'<ng-include src="getTemplateUrl()" />',link:function(scope){scope.getTemplateUrl=function(){var type=scope.type;if(type)return type=type.charAt(0).toUpperCase()+type.slice(1),"/ml-sq-builder/types/"+type+".html"},scope.booleans=["False","True"],scope.booleansOrder=["True","False"],scope.inputNeeded=function(){var needs=["value-query","word-query","EQ","NE","GT","GE","LT","LE"];return~needs.indexOf(scope.rule.subType)}}}}])}(),function(){"use strict";function mlAnalyticsDesign(){return{restrict:"E",templateUrl:"/templates/designer.html",controller:"ReportDesignerCtrl"}}angular.module("ml.analyticsDashboard").directive("mlAnalyticsDesign",mlAnalyticsDesign)}(),function(){"use strict";function mlAnalyticsDashboardHome(){return{restrict:"E",templateUrl:"/templates/home.html"}}angular.module("ml.analyticsDashboard").directive("mlAnalyticsDashboardHome",mlAnalyticsDashboardHome)}(),function(){"use strict";function manageMlAnalyticsDashboard(){return{restrict:"E",templateUrl:"/templates/manage.html",controller:"ManageCtrl"}}angular.module("ml.analyticsDashboard").directive("manageMlAnalyticsDashboard",manageMlAnalyticsDashboard)}(),function(){"use strict";function mlAnalyticsReportEditor(){return{restrict:"E",templateUrl:"/templates/editor.html",controller:"ReportEditorCtrl"}}angular.module("ml.analyticsDashboard").directive("mlAnalyticsReportEditor",mlAnalyticsReportEditor)}(),function(){"use strict";function mlAnalyticsNewReport(){return{restrict:"E",templateUrl:"/templates/new-report.html",controller:"NewReportCtrl"}}angular.module("ml.analyticsDashboard").directive("mlAnalyticsNewReport",mlAnalyticsNewReport)}(),function(){"use strict";function HomeCtrl(){}angular.module("ml.analyticsDashboard").controller("HomeCtrl",HomeCtrl),HomeCtrl.$inject=[]}(),function($){$.fn.drag=function(str,arg,opts){var type="string"==typeof str?str:"",fn=$.isFunction(str)?str:$.isFunction(arg)?arg:null;return 0!==type.indexOf("drag")&&(type="drag"+type),opts=(str==fn?arg:opts)||{},fn?this.bind(type,opts,fn):this.trigger(type)};var $event=$.event,$special=$event.special,drag=$special.drag={defaults:{which:1,distance:0,not:":input",handle:null,relative:!1,drop:!0,click:!1},datakey:"dragdata",noBubble:!0,add:function(obj){var data=$.data(this,drag.datakey),opts=obj.data||{};data.related+=1,$.each(drag.defaults,function(key,def){void 0!==opts[key]&&(data[key]=opts[key])})},remove:function(){$.data(this,drag.datakey).related-=1},setup:function(){if(!$.data(this,drag.datakey)){var data=$.extend({related:0},drag.defaults);$.data(this,drag.datakey,data),$event.add(this,"touchstart mousedown",drag.init,data),this.attachEvent&&this.attachEvent("ondragstart",drag.dontstart)}},teardown:function(){var data=$.data(this,drag.datakey)||{};data.related||($.removeData(this,drag.datakey),$event.remove(this,"touchstart mousedown",drag.init),drag.textselect(!0),this.detachEvent&&this.detachEvent("ondragstart",drag.dontstart))},init:function(event){if(!drag.touched){var results,dd=event.data;if(!(0!=event.which&&dd.which>0&&event.which!=dd.which)&&!$(event.target).is(dd.not)&&(!dd.handle||$(event.target).closest(dd.handle,event.currentTarget).length)&&(drag.touched="touchstart"==event.type?this:null,dd.propagates=1,dd.mousedown=this,dd.interactions=[drag.interaction(this,dd)],dd.target=event.target,dd.pageX=event.pageX,dd.pageY=event.pageY,dd.dragging=null,results=drag.hijack(event,"draginit",dd),dd.propagates))return results=drag.flatten(results),results&&results.length&&(dd.interactions=[],$.each(results,function(){dd.interactions.push(drag.interaction(this,dd))})),dd.propagates=dd.interactions.length,dd.drop!==!1&&$special.drop&&$special.drop.handler(event,dd),drag.textselect(!1),drag.touched?$event.add(drag.touched,"touchmove touchend",drag.handler,dd):$event.add(document,"mousemove mouseup",drag.handler,dd),!drag.touched||dd.live?!1:void 0}},interaction:function(elem,dd){var offset=$(elem)[dd.relative?"position":"offset"]()||{top:0,left:0};return{drag:elem,callback:new drag.callback,droppable:[],offset:offset}},handler:function(event){var dd=event.data;switch(event.type){case!dd.dragging&&"touchmove":event.preventDefault();case!dd.dragging&&"mousemove":if(Math.pow(event.pageX-dd.pageX,2)+Math.pow(event.pageY-dd.pageY,2)<Math.pow(dd.distance,2))break;event.target=dd.target,drag.hijack(event,"dragstart",dd),dd.propagates&&(dd.dragging=!0);case"touchmove":event.preventDefault();case"mousemove":if(dd.dragging){if(drag.hijack(event,"drag",dd),dd.propagates){dd.drop!==!1&&$special.drop&&$special.drop.handler(event,dd);break}event.type="mouseup"}case"touchend":case"mouseup":default:drag.touched?$event.remove(drag.touched,"touchmove touchend",drag.handler):$event.remove(document,"mousemove mouseup",drag.handler),dd.dragging&&(dd.drop!==!1&&$special.drop&&$special.drop.handler(event,dd),drag.hijack(event,"dragend",dd)),drag.textselect(!0),dd.click===!1&&dd.dragging&&$.data(dd.mousedown,"suppress.click",(new Date).getTime()+5),dd.dragging=drag.touched=!1}},hijack:function(event,type,dd,x,elem){if(dd){var result,ia,callback,orig={event:event.originalEvent,type:event.type},mode=type.indexOf("drop")?"drag":"drop",i=x||0,len=isNaN(x)?dd.interactions.length:x;event.type=type,event.originalEvent=null,dd.results=[];do if(ia=dd.interactions[i]){if("dragend"!==type&&ia.cancelled)continue;callback=drag.properties(event,dd,ia),ia.results=[],$(elem||ia[mode]||dd.droppable).each(function(p,subject){return callback.target=subject,event.isPropagationStopped=function(){return!1},result=subject?$event.dispatch.call(subject,event,callback):null,result===!1?("drag"==mode&&(ia.cancelled=!0,dd.propagates-=1),"drop"==type&&(ia[mode][p]=null)):"dropinit"==type&&ia.droppable.push(drag.element(result)||subject),"dragstart"==type&&(ia.proxy=$(drag.element(result)||ia.drag)[0]),ia.results.push(result),delete event.result,"dropinit"!==type?result:void 0}),dd.results[i]=drag.flatten(ia.results),"dropinit"==type&&(ia.droppable=drag.flatten(ia.droppable)),"dragstart"!=type||ia.cancelled||callback.update()}while(++i<len);return event.type=orig.type,event.originalEvent=orig.event,drag.flatten(dd.results)}},properties:function(event,dd,ia){var obj=ia.callback;return obj.drag=ia.drag,obj.proxy=ia.proxy||ia.drag,obj.startX=dd.pageX,obj.startY=dd.pageY,obj.deltaX=event.pageX-dd.pageX,obj.deltaY=event.pageY-dd.pageY,obj.originalX=ia.offset.left,obj.originalY=ia.offset.top,obj.offsetX=obj.originalX+obj.deltaX,obj.offsetY=obj.originalY+obj.deltaY,obj.drop=drag.flatten((ia.drop||[]).slice()),obj.available=drag.flatten((ia.droppable||[]).slice()),obj},element:function(arg){return arg&&(arg.jquery||1==arg.nodeType)?arg:void 0},flatten:function(arr){return $.map(arr,function(member){return member&&member.jquery?$.makeArray(member):member&&member.length?drag.flatten(member):member})},textselect:function(bool){$(document)[bool?"unbind":"bind"]("selectstart",drag.dontstart).css("MozUserSelect",bool?"":"none"),document.unselectable=bool?"off":"on"},dontstart:function(){return!1},callback:function(){}};drag.callback.prototype={update:function(){$special.drop&&this.available.length&&$.each(this.available,function(i){$special.drop.locate(this,i)})}};var $dispatch=$event.dispatch;$event.dispatch=function(event){return $.data(this,"suppress."+event.type)-(new Date).getTime()>0?void $.removeData(this,"suppress."+event.type):$dispatch.apply(this,arguments)};var touchHooks=$event.fixHooks.touchstart=$event.fixHooks.touchmove=$event.fixHooks.touchend=$event.fixHooks.touchcancel={props:"clientX clientY pageX pageY screenX screenY".split(" "),filter:function(event,orig){if(orig){var touched=orig.touches&&orig.touches[0]||orig.changedTouches&&orig.changedTouches[0]||null;touched&&$.each(touchHooks.props,function(i,prop){event[prop]=touched[prop]})}return event}};$special.draginit=$special.dragstart=$special.dragend=drag}(jQuery),function($){var $event=$.event,drag=$event.special.drag,origadd=drag.add,origteardown=drag.teardown;drag.noBubble=!1,drag.livekey="livedrag",drag.add=function(obj){origadd.apply(this,arguments);var data=$.data(this,drag.datakey);!data.live&&obj.selector&&(data.live=!0,$event.add(this,"draginit."+drag.livekey,drag.delegate))},drag.teardown=function(){origteardown.apply(this,arguments);var data=$.data(this,drag.datakey)||{};data.live&&($event.remove(this,"draginit."+drag.livekey,drag.delegate),data.live=!1)},drag.delegate=function(event){var target,elems=[],events=$.data(this,"events")||{};return $.each(events||[],function(key,arr){0===key.indexOf("drag")&&$.each(arr||[],function(i,obj){target=$(event.target).closest(obj.selector,event.currentTarget)[0],target&&($event.add(target,obj.origType+"."+drag.livekey,obj.origHandler||obj.handler,obj.data),$.inArray(target,elems)<0&&elems.push(target))})}),elems.length?$(elems).bind("dragend."+drag.livekey,function(){$event.remove(this,"."+drag.livekey)}):!1}}(jQuery),function(){"use strict";function DashboardCtrl($scope,$location){function establishMode(){$location.search()["ml-analytics-mode"]?$scope.mode=$location.search()["ml-analytics-mode"]:$location.search("ml-analytics-mode","home")}establishMode()}angular.module("ml.analyticsDashboard").controller("DashboardCtrl",DashboardCtrl),DashboardCtrl.$inject=["$scope","$location"]}(),function(){"use strict";function mlAnalyticsViewChartCtrl($scope){}angular.module("ml.analyticsDashboard.report").controller("mlAnalyticsViewChartCtrl",mlAnalyticsViewChartCtrl)}(),function(){"use strict";function mlResultsGridCtrl($scope){$scope.pageLength="10",$scope.sortColumn=0,$scope.sortReverse=!1,$scope.gridPage=1,$scope.sorter=function(item){return item[$scope.sortColumn]},$scope.setSortColumn=function(column){column===$scope.sortColumn?$scope.sortReverse=!$scope.sortReverse:$scope.sortColumn=column}}angular.module("ml.analyticsDashboard.report").controller("mlResultsGridCtrl",mlResultsGridCtrl),mlResultsGridCtrl.$inject=["$scope"]}(),function(){"use strict";function mlSmartGridCtrl($scope,$http,$q){$scope.widget.mode="View",$scope.isGridCollapsed=!0,$scope.shouldShowChart=!1,$scope.model={queryConfig:null,queryError:null,config:null,configError:null,results:null,includeFrequency:!1,loadingConfig:!1,loadingResults:!1,groupingStrategy:"collection",showBuilder:!1},$scope.widget.dataModelOptions.groupingStrategy&&($scope.model.groupingStrategy=$scope.widget.dataModelOptions.groupingStrategy),$scope.deferredAbort=null,$scope.data={},$scope.data.operation="and-query",$scope.data.query=[],$scope.data.needsUpdate=!0,$scope.data.directory=$scope.widget.dataModelOptions.directory,$scope.data.columns=[],$scope.data.computes=[],$scope.executor={},$scope.clearResults=function(){$scope.model.results=null},$scope.dataManager={removeCompute:function(index){$scope.data.computes.splice(index,1)},removeColumn:function(index){$scope.data.columns.splice(index,1)}},$scope.shortName=function(field){return field.localname||field["path-expression"]},$scope.getDbConfig=function(){var params={"rs:strategy":$scope.model.groupingStrategy};$scope.model.showBuilder=!1,$scope.model.loadingConfig=!0,$scope.model.config?params["rs:database"]=$scope.model.config["current-database"]:$scope.widget.dataModelOptions.database&&(params["rs:database"]=$scope.widget.dataModelOptions.database),$scope.clearResults(),$scope.model.includeFrequency=!1,$scope.model.queryConfig={"result-type":"group-by",rows:[],columns:[],computes:[],options:["headers=true"],query:{query:{}}},$http.get("/v1/resources/index-discovery",{params:params}).then(function(response){if($scope.model.loadingConfig=!1,response.data.errorResponse)return void($scope.model.configError=response.data.errorResponse.message);if($scope.data.targetDatabase=response.data["current-database"],$scope.data.databases=response.data.databases,_.isEmpty(response.data.docs))$scope.model.configError="No documents with range indices in the database";else{$scope.model.configError=null;var docs=response.data.docs;$scope.data.originalDocs=docs,$scope.data.directories=Object.keys(docs),$scope.data.fields=angular.copy(docs[$scope.data.directory]),$scope.data.fields&&$scope.setDocument()}$scope.execute()},function(response){$scope.model.loadingConfig=!1,$scope.model.configError=response.data})},$scope.setDocument=function(){if($scope.data.directory){if($scope.data.operation="and-query",$scope.data.query=[],$scope.data.directory===$scope.widget.dataModelOptions.directory){if($scope.widget.dataModelOptions.query&&$scope.widget.dataModelOptions.query.query&&$scope.widget.dataModelOptions.query.query.queries){var query=$scope.widget.dataModelOptions.query.query.queries[0],operation=Object.keys(query)[0];$scope.data.operation=operation,$scope.data.query=query[operation].queries}else $scope.data.operation="and-query",$scope.data.query=[];$scope.widget.dataModelOptions.columns?angular.copy($scope.widget.dataModelOptions.columns,$scope.data.columns):$scope.data.columns=[],$scope.widget.dataModelOptions.computes?angular.copy($scope.widget.dataModelOptions.computes,$scope.data.computes):$scope.data.computes=[]}else $scope.data.operation="and-query",$scope.data.query=[],$scope.data.columns=[],$scope.data.computes=[];$scope.data.needsUpdate=!0,$scope.model.showBuilder=!0}else $scope.model.showBuilder=!1},$scope.save=function(){$scope.widget.dataModelOptions.database=$scope.data.targetDatabase,$scope.widget.dataModelOptions.groupingStrategy=$scope.model.groupingStrategy,$scope.widget.dataModelOptions.directory=$scope.data.directory,$scope.widget.dataModelOptions.query={},angular.copy($scope.data.structuredQuery,$scope.widget.dataModelOptions.query),$scope.widget.dataModelOptions.columns=$scope.data.columns,$scope.widget.dataModelOptions.computes=$scope.data.computes,$scope.options.saveDashboard()},$scope.execute=function(){var columns=$scope.widget.dataModelOptions.columns,count=columns.length;$scope.model.loadingResults=!0,count?$scope.executeComplexQuery(count):$scope.executeSimpleQuery(1)},$scope.executeComplexQuery=function(count){var queries=$scope.widget.dataModelOptions.query.query.queries;if(1===queries.length){var firstElement=queries[0],key=Object.keys(firstElement)[0];0===firstElement[key].queries.length&&(queries=[])}var query={queries:queries};"View"===$scope.widget.mode&&$scope.executor.qtext?query.qtext=$scope.executor.qtext:query.qtext="";var params={},queryConfig=angular.copy($scope.model.queryConfig);$scope.model.config&&(params["rs:database"]=$scope.model.config["current-database"]),$scope.model.includeFrequency&&queryConfig.computes.push({fn:"frequency"}),queryConfig.query.query=query,queryConfig.columns=$scope.widget.dataModelOptions.columns,queryConfig.computes=$scope.widget.dataModelOptions.computes,$scope.model.loadingResults=!0,$scope.clearResults(),$scope.deferredAbort=$q.defer(),$http({method:"POST",url:"/v1/resources/group-by",params:params,data:queryConfig,timeout:$scope.deferredAbort.promise}).then(function(response){$scope.model.results=response.data,$scope.model.queryError=null,$scope.model.loadingResults=!1,$scope.createComplexTable($scope.model.results.headers,$scope.model.results.results),$scope.createHighcharts(count,$scope.model.results.headers,$scope.model.results.results)},function(response){$scope.model.loadingResults=!1,0!==response.status&&($scope.model.queryError={title:response.statusText,description:response.data})})},$scope.createComplexTable=function(headers,results){$scope.cols=[],headers.forEach(function(header){$scope.cols.push({field:header,title:header,sortable:header,show:!0})});var records=[];results.forEach(function(row){for(var record={},i=0;i<row.length;i++)record[headers[i]]=row[i];records.push(record)});var initialParams={count:$scope.widget.dataModelOptions.pageLength,sorting:{}};initialParams.sorting[headers[0]]="desc"},$scope.executeSimpleQuery=function(start){$scope.model.loadingResults=!1},$scope.createHighcharts=function(count,headers,results){var chartType=$scope.widget.dataModelOptions.chart;results[0].length===count?($scope.shouldShowChart=!1,$scope.isGridCollapsed=!1):($scope.shouldShowChart=!0,$scope.isGridCollapsed=!0),"column"===chartType?$scope.createColumnHighcharts(count,headers,results):$scope.createPieHighcharts(count,headers,results)},$scope.createColumnHighcharts=function(count,headers,results){for(var categories=[],series=[],i=count;i<headers.length;i++)series.push({name:headers[i],data:[]});results.forEach(function(row){for(var groups=[],i=0;count>i;i++)groups.push(row[i]);for(categories.push(groups.join(",")),i=count;i<row.length;i++)series[i-count].data.push(row[i])}),$scope.highchartConfig={options:{chart:{type:"column"},tooltip:{shared:!0,useHTML:!0,borderWidth:1,borderRadius:10,headerFormat:'<span style="font-size:16px">{point.key}</span><table>',pointFormat:'<tr><td style="color:{series.color};padding:0">{series.name}: </td><td style="padding:0"><b>{point.y:.1f}</b></td></tr>',footerFormat:"</table>"},plotOptions:{column:{pointPadding:.2,borderWidth:0}}},title:{text:""},xAxis:{categories:categories},yAxis:{title:{text:""}},series:series}},$scope.createPieHighcharts=function(count,headers,results){for(var colors=Highcharts.getOptions().colors,measures=[],series=[],i=count;i<headers.length;i++)series.push({name:headers[i],data:[]}),measures.push(headers[i]);var rings=series.length;if(rings>1){var percent=Math.floor(100/rings),ring=0;for(series[ring].size=percent+"%",ring=1;rings>ring;ring++)series[ring].innerSize=percent*ring+"%",series[ring].size=percent*(ring+1)+"%"}results.forEach(function(row){for(var groups=[],i=0;count>i;i++)groups.push(row[i]);var category=groups.join(",");for(i=count;i<row.length;i++)series[i-count].data.push({name:category,color:colors[i-count],
y:row[i]})});var title="Measures: "+measures;$scope.highchartConfig={options:{chart:{type:"pie"},tooltip:{shared:!0,useHTML:!0,borderWidth:1,borderRadius:10,headerFormat:'<span style="font-size:16px">{point.key}</span><table>',pointFormat:'<tr><td style="color:{series.color};padding:0">{series.name}: </td><td style="padding:0"><b>{point.y:.1f}</b></td></tr>',footerFormat:"</table>"},plotOptions:{pie:{showInLegend:!0,shadow:!1,center:["50%","50%"],dataLabels:{enabled:!0,useHTML:!1,format:"<b>{point.name} {series.name}</b>: {point.percentage:.1f}%",style:{color:Highcharts.theme&&Highcharts.theme.contrastTextColor||"black"}}}}},credits:{enabled:!1},title:{text:title},yAxis:{title:{text:""}},series:series}},$scope.getDbConfig()}angular.module("ml.analyticsDashboard.report").controller("mlSmartGridCtrl",mlSmartGridCtrl),mlSmartGridCtrl.$inject=["$scope","$http","$q"]}(),function(){"use strict";angular.module("ml.analyticsDashboard").controller("ReportDesignerCtrl",["$scope","$location","ReportService","WidgetDefinitions",function($scope,$location,ReportService,WidgetDefinitions){function initWithData(){createDefaultWidgets(),ReportService.loadWidgets(defaultWidgets)}function createDefaultWidgets(){defaultWidgets=$scope.report.widgets?_.map($scope.report.widgets,function(widget){return{name:widget.name,title:widget.title,attrs:widget.attrs,style:widget.size,dataModelOptions:widget.dataModelOptions}}):[]}$scope.report={},$scope.report.uri=$location.search()["ml-analytics-uri"];var defaultWidgets;createDefaultWidgets();var store={},storage={getItem:function(key){return store[key]},setItem:function(key,value){store[key]=value,$scope.report.widgets=value.widgets,$scope.saveWidgets()},removeItem:function(key){delete store[key]}};$scope.reportDashboardOptions={widgetButtons:!0,widgetDefinitions:WidgetDefinitions,defaultWidgets:defaultWidgets,hideToolbar:!1,hideWidgetName:!0,explicitSave:!1,stringifyStorage:!1,storage:storage,storageId:$scope.report.uri},ReportService.setDashboardOptions($scope.reportDashboardOptions),ReportService.getReport($scope.report.uri).then(function(resp){angular.extend($scope.report,resp.data),initWithData()}),$scope.returnHome=function(){$location.search("ml-analytics-mode","home"),$location.search("ml-analytics-uri",null)},$scope.$on("widgetAdded",function(event,widget){event.stopPropagation()}),$scope.saveWidgets=function(){ReportService.updateReport($scope.report)}}])}(),function(){"use strict";function ManageCtrl($scope,$location,$window,userService,ReportService,WidgetDefinitions){function establishMode(){$location.search()["ml-analytics-mode"]?$scope.mode=$location.search()["ml-analytics-mode"]:$location.search("ml-analytics-mode","home")}$scope.currentUser=null,$scope.search={},$scope.showLoading=!1,$scope.widgetDefs=WidgetDefinitions,$scope.reports=[],establishMode(),$scope.report={},$scope.addWidget=function(widgetDef){ReportService.getDashboardOptions($scope.reportDashboardOptions).addWidget({name:widgetDef.name})},$scope.deleteReport=function(report){$window.confirm("This action will delete this report permanently. Are you sure you want to delete it?")&&ReportService.deleteReport(report.uri).then(function(response){for(var i=0;i<$scope.reports.length;i++)if(report.uri===$scope.reports[i].uri){$scope.reports.splice(i,1);break}},function(response){$window.alert(response)})},$scope.newReportForm=function(){$location.search("ml-analytics-mode","new")},$scope.gotoDesigner=function(uri){$location.search("ml-analytics-mode","design"),$location.search("ml-analytics-uri",uri)},$scope.showReportEditor=function(report){$scope.report.uri=report.uri,$location.search("ml-analytics-mode","edit"),$location.search("ml-analytics-uri",$scope.report.uri)},$scope.getReports=function(){$scope.showLoading=!0,ReportService.getReports().then(function(response){$scope.reports=response.data.results,_.each($scope.reports,function(report){report.name=report.extracted.content[0].name}),$scope.showLoading=!1},function(){$scope.showLoading=!1})},$scope.$watch(userService.currentUser,function(newValue){$scope.currentUser=newValue,$scope.getReports()}),$scope.$on("$locationChangeSuccess",function(latest,old){establishMode()}),$scope.$on("mlAnalyticsDashboard:ReportCreated",function(event,report){$scope.reports.push(report)})}angular.module("ml.analyticsDashboard").controller("ManageCtrl",ManageCtrl),ManageCtrl.$inject=["$scope","$location","$window","userService","ReportService","WidgetDefinitions"]}(),function(){"use strict";angular.module("ml.analyticsDashboard").controller("NewReportCtrl",["$scope","$location","$rootScope","ReportService",function($scope,$location,$rootScope,ReportService){$scope.report={},$scope.report.privacy="public",$scope.setOption=function(option){$scope.report.privacy=option},$scope.isActive=function(option){return option===$scope.report.privacy},$scope.createReport=function(){$scope.report.uri="/ml-analytics-dashboard-reports/"+encodeURIComponent($scope.report.name)+"-"+Math.floor(1e6*Math.random()+1)+".json",ReportService.createReport($scope.report).then(function(response){$rootScope.$broadcast("mlAnalyticsDashboard:ReportCreated",$scope.report),$location.search("ml-analytics-mode","design"),$location.search("ml-analytics-uri",$scope.report.uri)})}}])}(),function(){"use strict";angular.module("ml.analyticsDashboard").controller("ReportEditorCtrl",["$scope","$location","ReportService",function($scope,$location,ReportService){$scope.report={},$scope.report.uri=$location.search()["ml-analytics-uri"],ReportService.getReport($scope.report.uri).then(function(response){angular.extend($scope.report,response.data)}),$scope.setOption=function(option){$scope.report.privacy=option},$scope.isActive=function(option){return option===$scope.report.privacy},$scope.updateReport=function(){ReportService.updateReport($scope.report).then(function(response){$location.search("ml-analytics-mode","home")})}}])}();